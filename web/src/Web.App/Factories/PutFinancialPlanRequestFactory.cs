using Web.App.Domain;
using Web.App.Extensions;
using Web.App.Infrastructure.Apis;

namespace Web.App.Factories;

public static class PutFinancialPlanRequestFactory
{
    public static PutFinancialPlanRequest Create(FinancialPlan plan)
    {
        return new PutFinancialPlanRequest
        {
            Year = plan.Year,
            Urn = plan.Urn,
            IsComplete = plan.IsComplete,
            TargetContactRatio = plan.TargetContactRatio,
            UseFigures = plan.UseFigures,
            TotalIncome = plan.TotalIncome.ToInt(),
            TotalExpenditure = plan.TotalExpenditure.ToInt(),
            TotalTeacherCosts = plan.TotalTeacherCosts.ToInt(),
            TotalNumberOfTeachersFte = plan.TotalNumberOfTeachersFte,
            EducationSupportStaffCosts = plan.EducationSupportStaffCosts.ToInt(),
            TimetablePeriods = plan.TimetablePeriods.ToInt(),
            HasMixedAgeClasses = plan.HasMixedAgeClasses,
            MixedAgeReceptionYear1 = plan.HasMixedAgeClasses.GetValueOrDefault() && plan.MixedAgeReceptionYear1,
            MixedAgeYear1Year2 = plan.HasMixedAgeClasses.GetValueOrDefault() && plan.MixedAgeYear1Year2,
            MixedAgeYear2Year3 = plan.HasMixedAgeClasses.GetValueOrDefault() && plan.MixedAgeYear2Year3,
            MixedAgeYear3Year4 = plan.HasMixedAgeClasses.GetValueOrDefault() && plan.MixedAgeYear3Year4,
            MixedAgeYear4Year5 = plan.HasMixedAgeClasses.GetValueOrDefault() && plan.MixedAgeYear4Year5,
            MixedAgeYear5Year6 = plan.HasMixedAgeClasses.GetValueOrDefault() && plan.MixedAgeYear5Year6,
            PupilsNursery = plan.PupilsNursery,
            PupilsReception = plan.PupilsReception.ToInt(),
            PupilsYear1 = plan.PupilsYear1.ToInt(),
            PupilsYear2 = plan.PupilsYear2.ToInt(),
            PupilsYear3 = plan.PupilsYear3.ToInt(),
            PupilsYear4 = plan.PupilsYear4.ToInt(),
            PupilsYear5 = plan.PupilsYear5.ToInt(),
            PupilsYear6 = plan.PupilsYear6.ToInt(),
            PupilsMixedReceptionYear1 = plan.PupilsMixedReceptionYear1.ToInt(),
            PupilsMixedYear1Year2 = plan.PupilsMixedYear1Year2.ToInt(),
            PupilsMixedYear2Year3 = plan.PupilsMixedYear2Year3.ToInt(),
            PupilsMixedYear3Year4 = plan.PupilsMixedYear3Year4.ToInt(),
            PupilsMixedYear4Year5 = plan.PupilsMixedYear4Year5.ToInt(),
            PupilsMixedYear5Year6 = plan.PupilsMixedYear5Year6.ToInt(),
            PupilsYear7 = plan.PupilsYear7.ToInt(),
            PupilsYear8 = plan.PupilsYear8.ToInt(),
            PupilsYear9 = plan.PupilsYear9.ToInt(),
            PupilsYear10 = plan.PupilsYear10.ToInt(),
            PupilsYear11 = plan.PupilsYear11.ToInt(),
            PupilsYear12 = plan.PupilsYear12,
            PupilsYear13 = plan.PupilsYear13,
            TeachersNursery = plan.TeachersNursery.ToInt(),
            TeachersMixedReceptionYear1 = plan.TeachersMixedReceptionYear1.ToInt(),
            TeachersMixedYear1Year2 = plan.TeachersMixedYear1Year2.ToInt(),
            TeachersMixedYear2Year3 = plan.TeachersMixedYear2Year3.ToInt(),
            TeachersMixedYear3Year4 = plan.TeachersMixedYear3Year4.ToInt(),
            TeachersMixedYear4Year5 = plan.TeachersMixedYear4Year5.ToInt(),
            TeachersMixedYear5Year6 = plan.TeachersMixedYear5Year6.ToInt(),
            TeachersReception = plan.TeachersReception.ToInt(),
            TeachersYear1 = plan.TeachersYear1.ToInt(),
            TeachersYear2 = plan.TeachersYear2.ToInt(),
            TeachersYear3 = plan.TeachersYear3.ToInt(),
            TeachersYear4 = plan.TeachersYear4.ToInt(),
            TeachersYear5 = plan.TeachersYear5.ToInt(),
            TeachersYear6 = plan.TeachersYear6.ToInt(),
            TeachersYear7 = plan.TeachersYear7.ToInt(),
            TeachersYear8 = plan.TeachersYear8.ToInt(),
            TeachersYear9 = plan.TeachersYear9.ToInt(),
            TeachersYear10 = plan.TeachersYear10.ToInt(),
            TeachersYear11 = plan.TeachersYear11.ToInt(),
            TeachersYear12 = plan.TeachersYear12.ToInt(),
            TeachersYear13 = plan.TeachersYear13.ToInt(),
            AssistantsMixedReceptionYear1 = plan.AssistantsMixedReceptionYear1,
            AssistantsMixedYear1Year2 = plan.AssistantsMixedYear1Year2,
            AssistantsMixedYear2Year3 = plan.AssistantsMixedYear2Year3,
            AssistantsMixedYear3Year4 = plan.AssistantsMixedYear3Year4,
            AssistantsMixedYear4Year5 = plan.AssistantsMixedYear4Year5,
            AssistantsMixedYear5Year6 = plan.AssistantsMixedYear5Year6,
            AssistantsNursery = plan.AssistantsNursery,
            AssistantsReception = plan.AssistantsReception,
            AssistantsYear1 = plan.AssistantsYear1,
            AssistantsYear2 = plan.AssistantsYear2,
            AssistantsYear3 = plan.AssistantsYear3,
            AssistantsYear4 = plan.AssistantsYear4,
            AssistantsYear5 = plan.AssistantsYear5,
            AssistantsYear6 = plan.AssistantsYear6,
            OtherTeachingPeriods = plan.OtherTeachingPeriods
                .Where(x => !string.IsNullOrEmpty(x.PeriodName))
                .Select(x => new PutFinancialPlanRequest.OtherTeachingPeriod
                {
                    PeriodName = x.PeriodName,
                    PeriodsPerTimetable = x.PeriodsPerTimetable
                }),
            ManagementRoleHeadteacher = plan.ManagementRoleHeadteacher,
            ManagementRoleDeputyHeadteacher = plan.ManagementRoleDeputyHeadteacher,
            ManagementRoleNumeracyLead = plan.ManagementRoleNumeracyLead,
            ManagementRoleLiteracyLead = plan.ManagementRoleLiteracyLead,
            ManagementRoleHeadSmallCurriculum = plan.ManagementRoleHeadSmallCurriculum,
            ManagementRoleHeadKs1 = plan.ManagementRoleHeadKs1,
            ManagementRoleHeadKs2 = plan.ManagementRoleHeadKs2,
            ManagementRoleSenco = plan.ManagementRoleSenco,
            ManagementRoleAssistantHeadteacher = plan.ManagementRoleAssistantHeadteacher,
            ManagementRoleHeadLargeCurriculum = plan.ManagementRoleHeadLargeCurriculum,
            ManagementRolePastoralLeader = plan.ManagementRolePastoralLeader,
            ManagementRoleOtherMembers = plan.ManagementRoleOtherMembers,
            NumberHeadteacher = plan.NumberHeadteacher.ToInt(),
            NumberDeputyHeadteacher = plan.NumberDeputyHeadteacher.ToInt(),
            NumberNumeracyLead = plan.NumberNumeracyLead.ToInt(),
            NumberLiteracyLead = plan.NumberLiteracyLead.ToInt(),
            NumberHeadSmallCurriculum = plan.NumberHeadSmallCurriculum.ToInt(),
            NumberHeadKs1 = plan.NumberHeadKs1.ToInt(),
            NumberHeadKs2 = plan.NumberHeadKs2.ToInt(),
            NumberSenco = plan.NumberSenco.ToInt(),
            NumberAssistantHeadteacher = plan.NumberAssistantHeadteacher.ToInt(),
            NumberHeadLargeCurriculum = plan.NumberHeadLargeCurriculum.ToInt(),
            NumberPastoralLeader = plan.NumberPastoralLeader.ToInt(),
            NumberOtherMembers = plan.NumberOtherMembers.ToInt(),
            TeachingPeriodsHeadteacher = plan.TeachingPeriodsHeadteacher.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsDeputyHeadteacher = plan.TeachingPeriodsDeputyHeadteacher.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsNumeracyLead = plan.TeachingPeriodsNumeracyLead.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsLiteracyLead = plan.TeachingPeriodsLiteracyLead.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadSmallCurriculum = plan.TeachingPeriodsHeadSmallCurriculum.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadKs1 = plan.TeachingPeriodsHeadKs1.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadKs2 = plan.TeachingPeriodsHeadKs2.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsSenco = plan.TeachingPeriodsSenco.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsAssistantHeadteacher = plan.TeachingPeriodsAssistantHeadteacher.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadLargeCurriculum = plan.TeachingPeriodsHeadLargeCurriculum.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsPastoralLeader = plan.TeachingPeriodsPastoralLeader.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsOtherMembers = plan.TeachingPeriodsOtherMembers.Select(x => x.ToInt()).ToArray(),
        };
    }
}