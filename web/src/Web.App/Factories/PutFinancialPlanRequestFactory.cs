using Web.App.Domain;
using Web.App.Extensions;
using Web.App.Infrastructure.Apis;

namespace Web.App.Factories;

public static class PutFinancialPlanRequestFactory
{
    public static PutFinancialPlanRequest Create(FinancialPlanInput planInput)
    {
        return new PutFinancialPlanRequest
        {
            Year = planInput.Year,
            Urn = planInput.Urn,
            IsComplete = planInput.IsComplete,
            TargetContactRatio = planInput.TargetContactRatio,
            UseFigures = planInput.UseFigures,
            TotalIncome = planInput.TotalIncome.ToInt(),
            TotalExpenditure = planInput.TotalExpenditure.ToInt(),
            TotalTeacherCosts = planInput.TotalTeacherCosts.ToInt(),
            TotalNumberOfTeachersFte = planInput.TotalNumberOfTeachersFte,
            EducationSupportStaffCosts = planInput.EducationSupportStaffCosts.ToInt(),
            TimetablePeriods = planInput.TimetablePeriods.ToInt(),
            HasMixedAgeClasses = planInput.HasMixedAgeClasses,
            MixedAgeReceptionYear1 = planInput.HasMixedAgeClasses.GetValueOrDefault() && planInput.MixedAgeReceptionYear1,
            MixedAgeYear1Year2 = planInput.HasMixedAgeClasses.GetValueOrDefault() && planInput.MixedAgeYear1Year2,
            MixedAgeYear2Year3 = planInput.HasMixedAgeClasses.GetValueOrDefault() && planInput.MixedAgeYear2Year3,
            MixedAgeYear3Year4 = planInput.HasMixedAgeClasses.GetValueOrDefault() && planInput.MixedAgeYear3Year4,
            MixedAgeYear4Year5 = planInput.HasMixedAgeClasses.GetValueOrDefault() && planInput.MixedAgeYear4Year5,
            MixedAgeYear5Year6 = planInput.HasMixedAgeClasses.GetValueOrDefault() && planInput.MixedAgeYear5Year6,
            PupilsNursery = planInput.PupilsNursery,
            PupilsReception = planInput.PupilsReception.ToInt(),
            PupilsYear1 = planInput.PupilsYear1.ToInt(),
            PupilsYear2 = planInput.PupilsYear2.ToInt(),
            PupilsYear3 = planInput.PupilsYear3.ToInt(),
            PupilsYear4 = planInput.PupilsYear4.ToInt(),
            PupilsYear5 = planInput.PupilsYear5.ToInt(),
            PupilsYear6 = planInput.PupilsYear6.ToInt(),
            PupilsMixedReceptionYear1 = planInput.PupilsMixedReceptionYear1.ToInt(),
            PupilsMixedYear1Year2 = planInput.PupilsMixedYear1Year2.ToInt(),
            PupilsMixedYear2Year3 = planInput.PupilsMixedYear2Year3.ToInt(),
            PupilsMixedYear3Year4 = planInput.PupilsMixedYear3Year4.ToInt(),
            PupilsMixedYear4Year5 = planInput.PupilsMixedYear4Year5.ToInt(),
            PupilsMixedYear5Year6 = planInput.PupilsMixedYear5Year6.ToInt(),
            PupilsYear7 = planInput.PupilsYear7.ToInt(),
            PupilsYear8 = planInput.PupilsYear8.ToInt(),
            PupilsYear9 = planInput.PupilsYear9.ToInt(),
            PupilsYear10 = planInput.PupilsYear10.ToInt(),
            PupilsYear11 = planInput.PupilsYear11.ToInt(),
            PupilsYear12 = planInput.PupilsYear12,
            PupilsYear13 = planInput.PupilsYear13,
            TeachersNursery = planInput.TeachersNursery.ToInt(),
            TeachersMixedReceptionYear1 = planInput.TeachersMixedReceptionYear1.ToInt(),
            TeachersMixedYear1Year2 = planInput.TeachersMixedYear1Year2.ToInt(),
            TeachersMixedYear2Year3 = planInput.TeachersMixedYear2Year3.ToInt(),
            TeachersMixedYear3Year4 = planInput.TeachersMixedYear3Year4.ToInt(),
            TeachersMixedYear4Year5 = planInput.TeachersMixedYear4Year5.ToInt(),
            TeachersMixedYear5Year6 = planInput.TeachersMixedYear5Year6.ToInt(),
            TeachersReception = planInput.TeachersReception.ToInt(),
            TeachersYear1 = planInput.TeachersYear1.ToInt(),
            TeachersYear2 = planInput.TeachersYear2.ToInt(),
            TeachersYear3 = planInput.TeachersYear3.ToInt(),
            TeachersYear4 = planInput.TeachersYear4.ToInt(),
            TeachersYear5 = planInput.TeachersYear5.ToInt(),
            TeachersYear6 = planInput.TeachersYear6.ToInt(),
            TeachersYear7 = planInput.TeachersYear7.ToInt(),
            TeachersYear8 = planInput.TeachersYear8.ToInt(),
            TeachersYear9 = planInput.TeachersYear9.ToInt(),
            TeachersYear10 = planInput.TeachersYear10.ToInt(),
            TeachersYear11 = planInput.TeachersYear11.ToInt(),
            TeachersYear12 = planInput.TeachersYear12.ToInt(),
            TeachersYear13 = planInput.TeachersYear13.ToInt(),
            AssistantsMixedReceptionYear1 = planInput.AssistantsMixedReceptionYear1,
            AssistantsMixedYear1Year2 = planInput.AssistantsMixedYear1Year2,
            AssistantsMixedYear2Year3 = planInput.AssistantsMixedYear2Year3,
            AssistantsMixedYear3Year4 = planInput.AssistantsMixedYear3Year4,
            AssistantsMixedYear4Year5 = planInput.AssistantsMixedYear4Year5,
            AssistantsMixedYear5Year6 = planInput.AssistantsMixedYear5Year6,
            AssistantsNursery = planInput.AssistantsNursery,
            AssistantsReception = planInput.AssistantsReception,
            AssistantsYear1 = planInput.AssistantsYear1,
            AssistantsYear2 = planInput.AssistantsYear2,
            AssistantsYear3 = planInput.AssistantsYear3,
            AssistantsYear4 = planInput.AssistantsYear4,
            AssistantsYear5 = planInput.AssistantsYear5,
            AssistantsYear6 = planInput.AssistantsYear6,
            OtherTeachingPeriods = planInput.OtherTeachingPeriods
                .Where(x => !string.IsNullOrEmpty(x.PeriodName))
                .Select(x => new PutFinancialPlanRequest.OtherTeachingPeriod
                {
                    PeriodName = x.PeriodName,
                    PeriodsPerTimetable = x.PeriodsPerTimetable
                }),
            ManagementRoleHeadteacher = planInput.ManagementRoleHeadteacher,
            ManagementRoleDeputyHeadteacher = planInput.ManagementRoleDeputyHeadteacher,
            ManagementRoleNumeracyLead = planInput.ManagementRoleNumeracyLead,
            ManagementRoleLiteracyLead = planInput.ManagementRoleLiteracyLead,
            ManagementRoleHeadSmallCurriculum = planInput.ManagementRoleHeadSmallCurriculum,
            ManagementRoleHeadKs1 = planInput.ManagementRoleHeadKs1,
            ManagementRoleHeadKs2 = planInput.ManagementRoleHeadKs2,
            ManagementRoleSenco = planInput.ManagementRoleSenco,
            ManagementRoleAssistantHeadteacher = planInput.ManagementRoleAssistantHeadteacher,
            ManagementRoleHeadLargeCurriculum = planInput.ManagementRoleHeadLargeCurriculum,
            ManagementRolePastoralLeader = planInput.ManagementRolePastoralLeader,
            ManagementRoleOtherMembers = planInput.ManagementRoleOtherMembers,
            NumberHeadteacher = planInput.NumberHeadteacher.ToInt(),
            NumberDeputyHeadteacher = planInput.NumberDeputyHeadteacher.ToInt(),
            NumberNumeracyLead = planInput.NumberNumeracyLead.ToInt(),
            NumberLiteracyLead = planInput.NumberLiteracyLead.ToInt(),
            NumberHeadSmallCurriculum = planInput.NumberHeadSmallCurriculum.ToInt(),
            NumberHeadKs1 = planInput.NumberHeadKs1.ToInt(),
            NumberHeadKs2 = planInput.NumberHeadKs2.ToInt(),
            NumberSenco = planInput.NumberSenco.ToInt(),
            NumberAssistantHeadteacher = planInput.NumberAssistantHeadteacher.ToInt(),
            NumberHeadLargeCurriculum = planInput.NumberHeadLargeCurriculum.ToInt(),
            NumberPastoralLeader = planInput.NumberPastoralLeader.ToInt(),
            NumberOtherMembers = planInput.NumberOtherMembers.ToInt(),
            TeachingPeriodsHeadteacher = planInput.TeachingPeriodsHeadteacher.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsDeputyHeadteacher = planInput.TeachingPeriodsDeputyHeadteacher.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsNumeracyLead = planInput.TeachingPeriodsNumeracyLead.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsLiteracyLead = planInput.TeachingPeriodsLiteracyLead.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadSmallCurriculum = planInput.TeachingPeriodsHeadSmallCurriculum.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadKs1 = planInput.TeachingPeriodsHeadKs1.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadKs2 = planInput.TeachingPeriodsHeadKs2.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsSenco = planInput.TeachingPeriodsSenco.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsAssistantHeadteacher = planInput.TeachingPeriodsAssistantHeadteacher.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsHeadLargeCurriculum = planInput.TeachingPeriodsHeadLargeCurriculum.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsPastoralLeader = planInput.TeachingPeriodsPastoralLeader.Select(x => x.ToInt()).ToArray(),
            TeachingPeriodsOtherMembers = planInput.TeachingPeriodsOtherMembers.Select(x => x.ToInt()).ToArray()
        };
    }
}