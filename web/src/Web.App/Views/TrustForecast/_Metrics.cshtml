@using Web.App.Domain
@model Web.App.ViewModels.TrustForecastMetricsViewModel

@if (Model.Year != null && Model.Metrics.Any())
{
    // re-order metrics as per designs
    var metrics = new[]
    {
        Model.Metrics.FirstOrDefault(m => m.Metric == BudgetForecastReturnMetricType.RevenueReserveAsPercentageOfIncome),
        Model.Metrics.FirstOrDefault(m => m.Metric == BudgetForecastReturnMetricType.StaffCostsAsPercentageOfIncome),
        Model.Metrics.FirstOrDefault(m => m.Metric == BudgetForecastReturnMetricType.ExpenditureAsPercentageOfIncome),
        Model.Metrics.FirstOrDefault(m => m.Metric == BudgetForecastReturnMetricType.SelfGeneratedIncomeAsPercentageOfIncome)
    };

    <h2 class="govuk-heading-m">Budget forecast return (BFR) metrics</h2>
    <p class="govuk-body" id="bfr-metrics-year">This data comes from the @Model.Year BFR.</p>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <table class="govuk-table" id="bfr-metrics">
                <thead class="govuk-table__head">
                <tr class="govuk-table__row govuk-visually-hidden">
                    <th scope="col" class="govuk-table__header">Metric</th>
                    <th scope="col" class="govuk-table__header">Value</th>
                </tr>
                </thead>
                <tbody class="govuk-table__body">
                @foreach (var metric in metrics
                              .Where(m => m != null)
                              .Cast<BudgetForecastReturnMetric>())
                {
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell">
                            @switch (metric.Metric)
                            {
                                case BudgetForecastReturnMetricType.RevenueReserveAsPercentageOfIncome:
                                    @:Revenue reserves as a percentage of income
                                    break;
                                case BudgetForecastReturnMetricType.StaffCostsAsPercentageOfIncome:
                                    @:Staff costs as a percentage of income
                                    break;
                                case BudgetForecastReturnMetricType.SelfGeneratedIncomeAsPercentageOfIncome:
                                    @:Self-generated income vs grant funding
                                    break;
                                default:
                                    @metric.Metric
                                    break;
                            }
                        </td>
                        <td class="govuk-table__cell">
                            @($"{metric.Value:0}%")
                            @if (metric.Metric == BudgetForecastReturnMetricType.SelfGeneratedIncomeAsPercentageOfIncome)
                            {
                                var grantFunding = Model.Metrics.SingleOrDefault(m => m.Metric == BudgetForecastReturnMetricType.GrantFundingAsPercentageOfIncome)?.Value;
                                @:/
                                @($"{grantFunding:0}%")
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}