@using Web.App.Domain
@using Web.App.ViewModels.Search
@model Web.App.ViewModels.Search.SearchResultsOptionsViewModel

<div class="search-results search-results__options">
    @await Html.PartialAsync("Search/_SearchResultsOptionsSort", Model)

    @if (Model is SchoolSearchResultsOptionsViewModel school)
    {
        <hr class="govuk-section-break govuk-section-break--s govuk-section-break--visible govuk-!-margin-bottom-4">

        <div class="search-option govuk-form-group govuk-!-margin-bottom-3">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                    <h2 class="govuk-fieldset__heading">
                        Education phase
                    </h2>
                </legend>
                <div class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
                    @foreach (var phase in OverallPhaseTypes.All.OrderBy(o => o))
                    {
                        <div class="govuk-checkboxes__item">
                            <input class="govuk-checkboxes__input"
                                   id="@nameof(SchoolSearchResultsOptionsViewModel.OverallPhase)-@phase"
                                   name="@nameof(SchoolSearchResultsOptionsViewModel.OverallPhase)" type="checkbox"
                                   value="@phase"
                                   @(school.OverallPhase.Any(o => o == phase) ? "checked" : string.Empty)>
                            <label class="govuk-label govuk-checkboxes__label"
                                   for="@nameof(SchoolSearchResultsOptionsViewModel.OverallPhase)-@phase">
                                @phase
                            </label>
                        </div>
                    }
                </div>
            </fieldset>
        </div>
    }

    @await Html.PartialAsync("Search/_SearchResultsOptionsSubmit", Model)
</div>