@using Web.App.Domain
@using Web.App.Domain.Charts
@using Web.App.Extensions
@using Web.App.ViewModels
@model Web.App.ViewModels.SchoolComparisonItSpendViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.ComparisonItSpend;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.Urn,
    kind = OrganisationTypes.School
})

<div class="govuk-grid-row govuk-!-margin-bottom-6">
    <div class="govuk-grid-column-two-thirds">
        <p class="govuk-body">
            <a class="govuk-link govuk-link--no-visited-state"
               href="@Url.Action("Index", "SchoolComparators", new { urn = Model.Urn })"
               data-test-id="comparators-link">We've chosen 2 sets of similar schools</a>
            to benchmark this school's spending against.
        </p>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">
        <div class="app-filter">
            <div class="app-filter__header">
                <h2 class="govuk-heading-m govuk-!-margin-0">
                    Filters
                </h2>
            </div>

            @if (Model.SelectedSubCategories.Length > 0)
            {
                <div class="app-filter__selected">
                    <div class="app-filter__selected-header">
                        <h2 class="govuk-heading-m">
                            Selected filters
                        </h2>
                            <a href="@Url.Action("Index", "SchoolComparisonItSpend", new { Model.Urn, ViewAs = (int)Model.ViewAs, ResultAs = (int)Model.ResultAs })"
                           class="govuk-link govuk-link--no-visited-state">Clear</a>
                    </div>
                    <h3 class="govuk-heading-s">
                        Sub categories
                    </h3>
                    <ul class="govuk-list">
                        @foreach (var category in Model.SelectedSubCategories)
                        {
                            <li>
                                <a href="@Url.Action("Index", "SchoolComparisonItSpend", new { Model.Urn, ViewAs = (int)Model.ViewAs, ResultAs = (int)Model.ResultAs, SelectedSubCategories = Model.SelectedSubCategories.Where(x => x != category) })"
                                   class="app-filter__tag">
                                    @category.GetFilterDescription()
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
            <div class="app-filter__body">
                @using (Html.BeginForm(FormMethod.Post, true, new { novalidate = "novalidate", role = "search" }))
                {
                    <input type="hidden"
                           name="@nameof(SchoolComparisonItSpendViewModel.SelectedSubCategories)"
                           value="@Model.SelectedSubCategories"/>


                    <div class="govuk-accordion" data-module="govuk-accordion" id="accordion-default">
                        <div class="govuk-accordion__section">
                            <div class="govuk-accordion__section-header">
                                <h2 class="govuk-accordion__section-heading">
                            <span class="govuk-accordion__section-button" id="accordion-default-heading-1">
                                Sub categories
                                @if (Model.SelectedSubCategories.Length > 0)
                                {
                                    <span
                                        class="govuk-hint app-filter__selected-hint">@($"{Model.SelectedSubCategories.Length} selected")</span>
                                }
                            </span>
                                </h2>
                            </div>
                            <div id="accordion-default-content-1" class="govuk-accordion__section-content">
                                <div class="govuk-form-group">
                                    <fieldset class="govuk-fieldset">
                                        <div class="govuk-checkboxes govuk-checkboxes--small"
                                             data-module="govuk-checkboxes">
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.AdministrationSoftwareSystems"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.AdministrationSoftwareSystems)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.AdministrationSoftwareSystems) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.AdministrationSoftwareSystems">
                                                    @ItSpendingCategories.SubCategoryFilter.AdministrationSoftwareSystems.GetFilterDescription()
                                                </label>
                                            </div>
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.Connectivity"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.Connectivity)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.Connectivity) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.Connectivity">
                                                    @ItSpendingCategories.SubCategoryFilter.Connectivity.GetFilterDescription()
                                                </label>
                                            </div>
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.ITLearningResources"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.ITLearningResources)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.ITLearningResources) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.ITLearningResources">
                                                    @ItSpendingCategories.SubCategoryFilter.ITLearningResources.GetFilterDescription()
                                                </label>
                                            </div>
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.ITSupport"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.ITSupport)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.ITSupport) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.ITSupport">
                                                    @ItSpendingCategories.SubCategoryFilter.ITSupport.GetFilterDescription()
                                                </label>
                                            </div>
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.LaptopsDesktopsTablets"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.LaptopsDesktopsTablets)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.LaptopsDesktopsTablets) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.LaptopsDesktopsTablets">
                                                    @ItSpendingCategories.SubCategoryFilter.LaptopsDesktopsTablets.GetFilterDescription()
                                                </label>
                                            </div>
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.OnsiteServers"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.OnsiteServers)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.OnsiteServers) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.OnsiteServers">
                                                    @ItSpendingCategories.SubCategoryFilter.OnsiteServers.GetFilterDescription()
                                                </label>
                                            </div>
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input"
                                                       id="@ItSpendingCategories.SubCategoryFilter.OtherHardware"
                                                       name="@nameof(Model.SelectedSubCategories)"
                                                       value="@((int)ItSpendingCategories.SubCategoryFilter.OtherHardware)"
                                                       type="checkbox"
                                                       @(Model.SelectedSubCategories.Contains(ItSpendingCategories.SubCategoryFilter.OtherHardware) ? "checked" : "")>
                                                <label class="govuk-label govuk-checkboxes__label"
                                                       for="@ItSpendingCategories.SubCategoryFilter.OtherHardware">
                                                    @ItSpendingCategories.SubCategoryFilter.OtherHardware.GetFilterDescription()
                                                </label>
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="govuk-form-group">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                <h2 class="govuk-fieldset__heading">
                                    Show result as
                                </h2>
                            </legend>
                            <div class="govuk-radios govuk-radios--small" data-module="govuk-radios"
                                 id="@nameof(SchoolComparisonItSpendViewModel.ResultAs)">
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input"
                                           id="@ChartDimensions.ResultAsOptions.SpendPerPupil"
                                           name="@nameof(SchoolComparisonItSpendViewModel.ResultAs)" type="radio"
                                           value="@((int)ChartDimensions.ResultAsOptions.SpendPerPupil)"
                                           @(Model.ResultAs == ChartDimensions.ResultAsOptions.SpendPerPupil ? "checked" : "")>
                                    <label class="govuk-label govuk-radios__label"
                                           for="@ChartDimensions.ResultAsOptions.SpendPerPupil">
                                        Spend per pupil
                                    </label>
                                </div>
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input"
                                           id="@ChartDimensions.ResultAsOptions.Actuals"
                                           name="@nameof(SchoolComparisonItSpendViewModel.ResultAs)" type="radio"
                                           value="@((int)ChartDimensions.ResultAsOptions.Actuals)"
                                           @(Model.ResultAs == ChartDimensions.ResultAsOptions.Actuals ? "checked" : "")>
                                    <label class="govuk-label govuk-radios__label"
                                           for="@ChartDimensions.ResultAsOptions.Actuals">
                                        Actuals
                                    </label>
                                </div>
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input"
                                           id="@ChartDimensions.ResultAsOptions.PercentExpenditure"
                                           name="@nameof(SchoolComparisonItSpendViewModel.ResultAs)" type="radio"
                                           value="@((int)ChartDimensions.ResultAsOptions.PercentExpenditure)"
                                           @(Model.ResultAs == ChartDimensions.ResultAsOptions.PercentExpenditure ? "checked" : "")>
                                    <label class="govuk-label govuk-radios__label"
                                           for="@ChartDimensions.ResultAsOptions.PercentExpenditure">
                                        Percentage of expenditure
                                    </label>
                                </div>
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input"
                                           id="@ChartDimensions.ResultAsOptions.PercentIncome"
                                           name="@nameof(SchoolComparisonItSpendViewModel.ResultAs)" type="radio"
                                           value="@((int)ChartDimensions.ResultAsOptions.PercentIncome)"
                                           @(Model.ResultAs == ChartDimensions.ResultAsOptions.PercentIncome ? "checked" : "")>
                                    <label class="govuk-label govuk-radios__label"
                                           for="@ChartDimensions.ResultAsOptions.PercentIncome">
                                        Percentage of income
                                    </label>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
                    <div class="govuk-form-group">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                <h2 class="govuk-fieldset__heading">
                                    View as
                                </h2>
                            </legend>
                            <div class="govuk-radios govuk-radios--small" data-module="govuk-radios"
                                 id="@nameof(SchoolComparisonItSpendViewModel.ViewAs)">
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input"
                                           id="@SchoolComparisonItSpendViewModel.ViewAsOptions.Chart"
                                           name="@nameof(SchoolComparisonItSpendViewModel.ViewAs)" type="radio"
                                           value="@((int)SchoolComparisonItSpendViewModel.ViewAsOptions.Chart)"
                                           @(Model.ViewAs == SchoolComparisonItSpendViewModel.ViewAsOptions.Chart ? "checked" : "")>
                                    <label class="govuk-label govuk-radios__label"
                                           for="@SchoolComparisonItSpendViewModel.ViewAsOptions.Chart">
                                        Chart
                                    </label>
                                </div>
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input"
                                           id="@SchoolComparisonItSpendViewModel.ViewAsOptions.Table"
                                           name="@nameof(SchoolComparisonItSpendViewModel.ViewAs)" type="radio"
                                           value="@((int)SchoolComparisonItSpendViewModel.ViewAsOptions.Table)"
                                           @(Model.ViewAs == SchoolComparisonItSpendViewModel.ViewAsOptions.Table ? "checked" : "")>
                                    <label class="govuk-label govuk-radios__label"
                                           for="@SchoolComparisonItSpendViewModel.ViewAsOptions.Table">
                                        Table
                                    </label>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
                    <button type="submit" class="govuk-button" data-module="govuk-button">
                        Apply filters
                    </button>
                }
            </div>
        </div>
    </div>
    <div class="govuk-grid-column-two-thirds">
        @for (var i = 0; i < Model.SubCategories.Count; i++)
        {
            var subCategory = Model.SubCategories.ElementAt(i);
            var uuid = Guid.NewGuid();

            if (i > 0)
            {
                <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible govuk-!-margin-bottom-6">
            }

            <section id="cost-sub-category-@subCategory.SubCategory?.ToSlug()">
                <h2 class="govuk-heading-m">@subCategory.SubCategory</h2>
                <div id="@uuid" class="costs-chart-container" data-title="@subCategory.SubCategory">
                    <div class="costs-chart-wrapper">
                        @if (string.IsNullOrWhiteSpace(subCategory.ChartSvg))
                        {
                            <div
                                class="govuk-warning-text govuk-!-margin-top-2 govuk-!-margin-bottom-2 ssr-chart-warning">
                                <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                                <strong class="govuk-warning-text__text">
                                    <span class="govuk-visually-hidden">Warning</span>
                                    Unable to display chart
                                </strong>
                            </div>
                        }
                        else
                        {
                            @if (subCategory.HasNegativeOrZeroValues)
                            {
                                <div class="govuk-warning-text">
                                    <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                                    <strong class="govuk-warning-text__text">
                                        <span class="govuk-visually-hidden">Warning</span>
                                        Only displaying schools with positive expenditure.
                                    </strong>
                                </div>
                            }
                            @if (Model.ViewAs == SchoolComparisonItSpendViewModel.ViewAsOptions.Chart)
                            {
                                <div class="govuk-!-margin-bottom-2 ssr-chart horizontal-bar-chart">
                                    @Html.Raw(subCategory.ChartSvg)
                                </div>
                            }
                            else
                            {
                                @if (subCategory.Data is null)
                                {
                                    <div
                                        class="govuk-warning-text govuk-!-margin-top-2 govuk-!-margin-bottom-2 ssr-chart-warning">
                                        <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                                        <strong class="govuk-warning-text__text">
                                            <span class="govuk-visually-hidden">Warning</span>
                                            Unable to display data
                                        </strong>
                                    </div>
                                }
                                else
                                {
                                    <table class="govuk-table">
                                            <thead class="govuk-table__head">
                                            <tr class="govuk-table__row">
                                                <th scope="col" class="govuk-table__header">School name</th>
                                                <th scope="col" class="govuk-table__header">Local Authority</th>
                                                <th scope="col" class="govuk-table__header">School type</th>
                                                <th scope="col" class="govuk-table__header">Number of pupils</th>
                                                <th scope="col" class="govuk-table__header">@Model.ResultAs.GetTableHeader()</th>
                                            </tr>
                                            </thead>
                                            <tbody class="govuk-table__body">
                                            @foreach (var row in subCategory.Data)
                                            {
                                                
                                                <tr class="govuk-table__row">
                                                    <td class="govuk-table__cell">
                                                        <a class="govuk-link govuk-link--no-visited-state" href=@($"/school/{row.Urn}")>@row.SchoolName</a>
                                                    </td>
                                                    <td class="govuk-table__cell">@row.LAName</td>
                                                    <td class="govuk-table__cell">@row.SchoolType</td>
                                                    <td class="govuk-table__cell">@row.TotalPupils.ToSimpleDisplay()</td>
                                                    <td class="govuk-table__cell">@Model.ResultAs.GetFormattedValue(row.Expenditure)</td>
                                                </tr>
                                            }
                                            </tbody>
                                        </table>
                                }
                            }    
                        }
                    </div>
                </div>
            </section>
        }
    </div>
</div>


@section scripts
{
    <script type="module" add-nonce="true">
        import {initAll} from '/js/govuk-frontend.min.js'

        initAll()
    </script>
}

