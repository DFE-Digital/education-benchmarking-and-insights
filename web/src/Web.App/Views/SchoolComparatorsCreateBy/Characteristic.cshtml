@using Web.App.Domain
@using Web.App.Extensions
@using Web.App.TagHelpers
@using Web.App.ViewModels
@model Web.App.ViewModels.SchoolComparatorsByCharacteristicViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolComparatorsCreateByCharacteristic;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.Urn,
    kind = OrganisationTypes.School
})

<pre>@Model.Characteristic.ToJson()</pre>

@await Html.PartialAsync("_ErrorSummary")

@using (Html.BeginForm("Characteristic", "SchoolComparatorsCreateBy", new
        {
            urn = Model.Urn
        }, FormMethod.Post, true, new
        {
            novalidate = "novalidate",
            @class = "characteristics"
        }))
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">

            <h2 class="govuk-heading-m">Default characteristics</h2>

            @await Html.PartialAsync("_SchoolTypes", Model.Data)
            @await Html.PartialAsync("_SchoolCategories", Model.Data)
            @await Html.PartialAsync("_LocalAuthorities", Model.Data, new ViewDataDictionary(ViewData)
            {
                {
                    "LAName", Model.Characteristic?.LAName
                }
            })

            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset" aria-describedby="contact-hint">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h1 class="govuk-fieldset__heading">
                            Additional characteristics
                        </h1>
                    </legend>
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @await Html.PartialAsync(
                            "_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Number of pupils",
                                nameof(Model.Data.TotalPupils),
                                nameof(Model.Data.TotalPupilsFrom),
                                nameof(Model.Data.TotalPupilsTo),
                                Model.Name,
                                Model.Characteristic?.TotalPupils.GetValueOrDefault().ToNumberSeparator(),
                                "has",
                                "pupils"))
                        @await Html.PartialAsync(
                            "_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Eligibility for free school meals (FSM)",
                                nameof(Model.Data.FreeSchoolMeals),
                                nameof(Model.Data.FreeSchoolMealsFrom),
                                nameof(Model.Data.FreeSchoolMealsTo),
                                Model.Name,
                                Model.Characteristic?.PercentFreeSchoolMeals.ToPercent(),
                                "has",
                                "of pupils eligible for FSM"))
                        @await Html.PartialAsync(
                            "_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Pupils with special educational needs (SEN)",
                                nameof(Model.Data.SpecialEducationalNeeds),
                                nameof(Model.Data.SpecialEducationalNeedsFrom),
                                nameof(Model.Data.SpecialEducationalNeedsTo),
                                Model.Name,
                                Model.Characteristic?.PercentSpecialEducationNeeds.ToPercent(),
                                "has",
                                "of pupils with special educational needs",
                                "%"))
                        @await Html.PartialAsync(
                            "_AdditionalCharacteristicsSelect",
                            new AdditionalCharacteristicsSelectViewModel(
                                ViewData,
                                "London weighting",
                                nameof(Model.Data.LondonWeighting),
                                nameof(Model.Data.LondonWeightings),
                                Model.Name,
                                Model.Characteristic?.LondonWeighting,
                                ["Inner", "Outer", "Neither"],
                                "is"))
                    </div>
                </fieldset>
            </div>

            <button type="submit" class="govuk-button" data-module="govuk-button" name="action" value="@FormAction.Continue">
                Continue
            </button>
        </div>
    </div>
}

@section scripts
{
    <script type="module" add-nonce="true">
      import { initAll } from '/js/govuk-frontend.min.js'
      initAll()
    </script>
}