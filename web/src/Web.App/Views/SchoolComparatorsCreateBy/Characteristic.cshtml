@using Web.App.Domain
@using Web.App.Extensions
@using Web.App.TagHelpers
@using Web.App.ViewModels
@model Web.App.ViewModels.SchoolComparatorsByCharacteristicViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolComparatorsCreateByCharacteristic;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.Urn,
    kind = OrganisationTypes.School
})

@await Html.PartialAsync("_ErrorSummary")

@using (Html.BeginForm("Characteristic", "SchoolComparatorsCreateBy", new
        {
            urn = Model.Urn
        }, FormMethod.Post, true, new
        {
            novalidate = "novalidate",
            @class = "characteristics"
        }))
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">

            <h2 class="govuk-heading-m">Default characteristics</h2>

            @await Html.PartialAsync("_SchoolTypes", Model.Data)
            @await Html.PartialAsync("_SchoolCategories", Model.Data)
            @await Html.PartialAsync("_LocalAuthorities", Model.Data, new ViewDataDictionary(ViewData)
            {
                {
                    "LAName", Model.Characteristic?.LAName
                }
            })

            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset" aria-describedby="contact-hint" id="additional-characteristics">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h1 class="govuk-fieldset__heading">
                            Additional characteristics
                        </h1>
                    </legend>
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Number of pupils",
                                nameof(Model.Data.TotalPupils),
                                Model.Data.TotalPupils,
                                nameof(Model.Data.TotalPupilsFrom),
                                Model.Data.TotalPupilsFrom.HasValue ? Model.Data.TotalPupilsFrom.Value.ToString() : string.Empty,
                                nameof(Model.Data.TotalPupilsTo),
                                Model.Data.TotalPupilsTo.HasValue ? Model.Data.TotalPupilsTo.Value.ToString() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.TotalPupils.GetValueOrDefault().ToNumberSeparator(),
                                "has",
                                "pupils"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Eligibility for free school meals (FSM)",
                                nameof(Model.Data.FreeSchoolMeals),
                                Model.Data.FreeSchoolMeals,
                                nameof(Model.Data.FreeSchoolMealsFrom),
                                Model.Data.FreeSchoolMealsFrom.HasValue ? Model.Data.FreeSchoolMealsFrom.Value.ToSimpleDisplay() : string.Empty,
                                nameof(Model.Data.FreeSchoolMealsTo),
                                Model.Data.FreeSchoolMealsTo.HasValue ? Model.Data.FreeSchoolMealsTo.Value.ToSimpleDisplay() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.PercentFreeSchoolMeals.ToPercent(),
                                "has",
                                "of pupils eligible for FSM",
                                "%"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Pupils with special educational needs (SEN)",
                                nameof(Model.Data.SpecialEducationalNeeds),
                                Model.Data.SpecialEducationalNeeds,
                                nameof(Model.Data.SpecialEducationalNeedsFrom),
                                Model.Data.SpecialEducationalNeedsFrom.HasValue ? Model.Data.SpecialEducationalNeedsFrom.Value.ToSimpleDisplay() : string.Empty,
                                nameof(Model.Data.SpecialEducationalNeedsTo),
                                Model.Data.SpecialEducationalNeedsTo.HasValue ? Model.Data.SpecialEducationalNeedsTo.Value.ToSimpleDisplay() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.PercentSpecialEducationNeeds.ToPercent(),
                                "has",
                                "of pupils with special educational needs",
                                "%"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsSelect",
                            new AdditionalCharacteristicsSelectViewModel(
                                ViewData,
                                "London weighting",
                                nameof(Model.Data.LondonWeighting),
                                Model.Data.LondonWeighting,
                                nameof(Model.Data.LondonWeightings),
                                string.Join(",", Model.Data.LondonWeightings),
                                Model.Name,
                                Model.Characteristic?.LondonWeighting,
                                ["Inner", "Outer", "Neither"],
                                prefix: "is"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Average building age",
                                nameof(Model.Data.AverageBuildingAge),
                                Model.Data.AverageBuildingAge,
                                nameof(Model.Data.AverageBuildingAgeFrom),
                                Model.Data.AverageBuildingAgeFrom.HasValue ? Model.Data.AverageBuildingAgeFrom.Value.ToString() : string.Empty,
                                nameof(Model.Data.AverageBuildingAgeTo),
                                Model.Data.AverageBuildingAgeTo.HasValue ? Model.Data.AverageBuildingAgeTo.Value.ToString() : string.Empty,
                                Model.Name,
                                (DateTime.Now.Year - Model.Characteristic?.BuildingAverageAge).GetValueOrDefault().ToNumberSeparator(),
                                "average building age is",
                                "years",
                                inputsSuffix: "years"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Gross internal floor area",
                                nameof(Model.Data.InternalFloorArea),
                                Model.Data.InternalFloorArea,
                                nameof(Model.Data.InternalFloorAreaFrom),
                                Model.Data.InternalFloorAreaFrom.HasValue ? Model.Data.InternalFloorAreaFrom.Value.ToString() : string.Empty,
                                nameof(Model.Data.InternalFloorAreaTo),
                                Model.Data.InternalFloorAreaTo.HasValue ? Model.Data.InternalFloorAreaTo.Value.ToString() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.TotalInternalFloorArea.GetValueOrDefault().ToNumberSeparator(),
                                "is",
                                "square metres",
                                inputsSuffix: "square metres"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Number of schools within trust",
                                nameof(Model.Data.SchoolsInTrust),
                                Model.Data.SchoolsInTrust,
                                nameof(Model.Data.SchoolsInTrustFrom),
                                Model.Data.SchoolsInTrustFrom.HasValue ? Model.Data.SchoolsInTrustFrom.Value.ToString() : string.Empty,
                                nameof(Model.Data.SchoolsInTrustTo),
                                Model.Data.SchoolsInTrustTo.HasValue ? Model.Data.SchoolsInTrustTo.Value.ToString() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.SchoolsInTrust.ToString(),
                                "has",
                                "schools"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsSelect",
                            new AdditionalCharacteristicsSelectViewModel(
                                ViewData,
                                "Schools in deficit",
                                nameof(Model.Data.Deficit),
                                Model.Data.Deficit,
                                nameof(Model.Data.Deficits),
                                Model.Data.Deficits.FirstOrDefault() ?? string.Empty,
                                Model.Name,
                                Model.Characteristic?.SchoolPosition,
                                ["Exclude schools in deficit", "Include schools in deficit"],
                                false,
                                "is in"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsSelect",
                            new AdditionalCharacteristicsSelectViewModel(
                                ViewData,
                                "Part of a private finance initiative",
                                nameof(Model.Data.PrivateFinanceInitiative),
                                Model.Data.PrivateFinanceInitiative,
                                nameof(Model.Data.PrivateFinanceInitiatives),
                                Model.Data.PrivateFinanceInitiatives.FirstOrDefault() ?? string.Empty,
                                Model.Name,
                                Model.Characteristic?.IsPFISchool == true ? "part of PFI" : "not part of PFI",
                                ["Part of PFI", "Not part of PFI"],
                                false,
                                "is"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Number of pupils in sixth form",
                                nameof(Model.Data.TotalPupilsSixthForm),
                                Model.Data.TotalPupilsSixthForm,
                                nameof(Model.Data.TotalPupilsSixthFormFrom),
                                Model.Data.TotalPupilsSixthFormFrom.HasValue ? Model.Data.TotalPupilsSixthFormFrom.Value.ToString() : string.Empty,
                                nameof(Model.Data.TotalPupilsSixthFormTo),
                                Model.Data.TotalPupilsSixthFormTo.HasValue ? Model.Data.TotalPupilsSixthFormTo.Value.ToString() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.TotalPupilsSixthForm.GetValueOrDefault().ToNumberSeparator(),
                                "has",
                                "pupils in sixth form"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Key stage 2 progress",
                                nameof(Model.Data.KeyStage2Progress),
                                Model.Data.KeyStage2Progress,
                                nameof(Model.Data.KeyStage2ProgressFrom),
                                Model.Data.KeyStage2ProgressFrom.HasValue ? Model.Data.KeyStage2ProgressFrom.Value.ToSimpleDisplay() : string.Empty,
                                nameof(Model.Data.KeyStage2ProgressTo),
                                Model.Data.KeyStage2ProgressTo.HasValue ? Model.Data.KeyStage2ProgressTo.Value.ToSimpleDisplay() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.KS2Progress.ToString(),
                                "key stage 2 progress is"))

                        @await Html.PartialAsync(
                            "Characteristics/_AdditionalCharacteristicsRange",
                            new AdditionalCharacteristicsRangeViewModel(
                                ViewData,
                                "Key stage 4 progress",
                                nameof(Model.Data.KeyStage4Progress),
                                Model.Data.KeyStage4Progress,
                                nameof(Model.Data.KeyStage4ProgressFrom),
                                Model.Data.KeyStage4ProgressFrom.HasValue ? Model.Data.KeyStage4ProgressFrom.Value.ToSimpleDisplay() : string.Empty,
                                nameof(Model.Data.KeyStage4ProgressTo),
                                Model.Data.KeyStage4ProgressTo.HasValue ? Model.Data.KeyStage4ProgressTo.Value.ToSimpleDisplay() : string.Empty,
                                Model.Name,
                                Model.Characteristic?.KS4Progress.ToString(),
                                "key stage 4 progress is"))
                    </div>
                </fieldset>
            </div>

            <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="conditional-sen">
                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset" aria-describedby="contact-hint" id="sen-characteristics">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            <h1 class="govuk-fieldset__heading">
                                SEN characteristics
                            </h1>
                        </legend>
                        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Specific learning difficulty",
                                    nameof(Model.Data.SpecificLearningDifficulty),
                                    Model.Data.SpecificLearningDifficulty,
                                    nameof(Model.Data.SpecificLearningDifficultyFrom),
                                    Model.Data.SpecificLearningDifficultyFrom.HasValue ? Model.Data.SpecificLearningDifficultyFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.SpecificLearningDifficultyTo),
                                    Model.Data.SpecificLearningDifficultyTo.HasValue ? Model.Data.SpecificLearningDifficultyTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithSPLD.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Moderate learning difficulty",
                                    nameof(Model.Data.ModerateLearningDifficulty),
                                    Model.Data.ModerateLearningDifficulty,
                                    nameof(Model.Data.ModerateLearningDifficultyFrom),
                                    Model.Data.ModerateLearningDifficultyFrom.HasValue ? Model.Data.ModerateLearningDifficultyFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.ModerateLearningDifficultyTo),
                                    Model.Data.ModerateLearningDifficultyTo.HasValue ? Model.Data.ModerateLearningDifficultyTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithMLD.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Severe learning difficulty",
                                    nameof(Model.Data.SevereLearningDifficulty),
                                    Model.Data.SevereLearningDifficulty,
                                    nameof(Model.Data.SevereLearningDifficultyFrom),
                                    Model.Data.SevereLearningDifficultyFrom.HasValue ? Model.Data.SevereLearningDifficultyFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.SevereLearningDifficultyTo),
                                    Model.Data.SevereLearningDifficultyTo.HasValue ? Model.Data.SevereLearningDifficultyTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithSLD.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Profound and multiple learning difficulty",
                                    nameof(Model.Data.ProfoundMultipleLearningDifficulty),
                                    Model.Data.ProfoundMultipleLearningDifficulty,
                                    nameof(Model.Data.ProfoundMultipleLearningDifficultyFrom),
                                    Model.Data.ProfoundMultipleLearningDifficultyFrom.HasValue ? Model.Data.ProfoundMultipleLearningDifficultyFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.ProfoundMultipleLearningDifficultyTo),
                                    Model.Data.ProfoundMultipleLearningDifficultyTo.HasValue ? Model.Data.ProfoundMultipleLearningDifficultyTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithPMLD.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Social, emotional and mental health",
                                    nameof(Model.Data.SocialEmotionalMentalHealth),
                                    Model.Data.SocialEmotionalMentalHealth,
                                    nameof(Model.Data.SocialEmotionalMentalHealthFrom),
                                    Model.Data.SocialEmotionalMentalHealthFrom.HasValue ? Model.Data.SocialEmotionalMentalHealthFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.SocialEmotionalMentalHealthTo),
                                    Model.Data.SocialEmotionalMentalHealthTo.HasValue ? Model.Data.SocialEmotionalMentalHealthTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithSEMH.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Speech, language and communications needs",
                                    nameof(Model.Data.SpeechLanguageCommunication),
                                    Model.Data.SpeechLanguageCommunication,
                                    nameof(Model.Data.SpeechLanguageCommunicationFrom),
                                    Model.Data.SpeechLanguageCommunicationFrom.HasValue ? Model.Data.SpeechLanguageCommunicationFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.SpeechLanguageCommunicationTo),
                                    Model.Data.SpeechLanguageCommunicationTo.HasValue ? Model.Data.SpeechLanguageCommunicationTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithSLCN.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Hearing impairment",
                                    nameof(Model.Data.HearingImpairment),
                                    Model.Data.HearingImpairment,
                                    nameof(Model.Data.HearingImpairmentFrom),
                                    Model.Data.HearingImpairmentFrom.HasValue ? Model.Data.HearingImpairmentFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.HearingImpairmentTo),
                                    Model.Data.HearingImpairmentTo.HasValue ? Model.Data.HearingImpairmentTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithHI.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Visual impairment",
                                    nameof(Model.Data.VisualImpairment),
                                    Model.Data.VisualImpairment,
                                    nameof(Model.Data.VisualImpairmentFrom),
                                    Model.Data.VisualImpairmentFrom.HasValue ? Model.Data.VisualImpairmentFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.VisualImpairmentTo),
                                    Model.Data.VisualImpairmentTo.HasValue ? Model.Data.VisualImpairmentTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithVI.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Multi-sensory impairment",
                                    nameof(Model.Data.MultiSensoryImpairment),
                                    Model.Data.MultiSensoryImpairment,
                                    nameof(Model.Data.MultiSensoryImpairmentFrom),
                                    Model.Data.MultiSensoryImpairmentFrom.HasValue ? Model.Data.MultiSensoryImpairmentFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.MultiSensoryImpairmentTo),
                                    Model.Data.MultiSensoryImpairmentTo.HasValue ? Model.Data.MultiSensoryImpairmentTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithMSI.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Physical disability",
                                    nameof(Model.Data.PhysicalDisability),
                                    Model.Data.PhysicalDisability,
                                    nameof(Model.Data.PhysicalDisabilityFrom),
                                    Model.Data.PhysicalDisabilityFrom.HasValue ? Model.Data.PhysicalDisabilityFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.PhysicalDisabilityTo),
                                    Model.Data.PhysicalDisabilityTo.HasValue ? Model.Data.PhysicalDisabilityTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithPD.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Autistic spectrum disorder",
                                    nameof(Model.Data.AutisticSpectrumDisorder),
                                    Model.Data.AutisticSpectrumDisorder,
                                    nameof(Model.Data.AutisticSpectrumDisorderFrom),
                                    Model.Data.AutisticSpectrumDisorderFrom.HasValue ? Model.Data.AutisticSpectrumDisorderFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.AutisticSpectrumDisorderTo),
                                    Model.Data.AutisticSpectrumDisorderTo.HasValue ? Model.Data.AutisticSpectrumDisorderTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithASD.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))

                            @await Html.PartialAsync(
                                "Characteristics/_AdditionalCharacteristicsRange",
                                new AdditionalCharacteristicsRangeViewModel(
                                    ViewData,
                                    "Other learning difficulty",
                                    nameof(Model.Data.OtherLearningDifficulty),
                                    Model.Data.OtherLearningDifficulty,
                                    nameof(Model.Data.OtherLearningDifficultyFrom),
                                    Model.Data.OtherLearningDifficultyFrom.HasValue ? Model.Data.OtherLearningDifficultyFrom.Value.ToSimpleDisplay() : string.Empty,
                                    nameof(Model.Data.OtherLearningDifficultyTo),
                                    Model.Data.OtherLearningDifficultyTo.HasValue ? Model.Data.OtherLearningDifficultyTo.Value.ToSimpleDisplay() : string.Empty,
                                    $"The value for {Model.Name}",
                                    Model.Characteristic?.PercentWithOTH.ToPercent(),
                                    "is",
                                    inputSuffix: "%"))
                        </div>
                    </fieldset>
                </div>
            </div>

            <button
                type="submit"
                class="govuk-button"
                data-module="govuk-button"
                name="action"
                data-prevent-double-click="true"
                value="@FormAction.Continue"
                id="submit-characteristic">
                Continue
            </button>
        </div>
    </div>
}

@section scripts
{
    <script type="module" add-nonce="true">
      import { initAll } from '/js/govuk-frontend.min.js';
      initAll();
      
      @if (Model.Data.LaNamesMutated == true)
      {
          @:document.getElementById("@nameof(Model.Data.LaSelection)").scrollIntoView();
      }
    </script>
}