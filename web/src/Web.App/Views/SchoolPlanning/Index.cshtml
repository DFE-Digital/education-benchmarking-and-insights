@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.Planning;
}

@await Component.InvokeAsync("EstablishmentHeading", new { title = ViewData[ViewDataKeys.Title], name = Model.Name, id = Model.Urn, kind = OrganisationTypes.School })

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <a href="@Url.Action("Start", "SchoolPlanningCreate", new { urn = Model.Urn })" role="button" class="govuk-button">
            Create new plan
        </a>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <table class="govuk-table">
            <caption class="govuk-table__caption govuk-table__caption--m">Deployment plans</caption>
            <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">Financial year</th>
                <th scope="col" class="govuk-table__header">Last updated</th>
                <th scope="col" class="govuk-table__header">Updated by</th>
                <th scope="col" class="govuk-table__header">Status</th>
                <th scope="col" class="govuk-table__header"></th>
            </tr>
            </thead>
            <tbody class="govuk-table__body">
            @foreach (var plan in Model.Plans.OrderByDescending(x => x.Year))
            {
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">@plan.Year.ToFinanceYear()</th>
                    <td class="govuk-table__cell">
                        @plan.UpdatedAt.ToString("dd MMM yyyy")
                    </td>
                    <td class="govuk-table__cell">
                        @plan.UpdatedBy
                    </td>
                    <td class="govuk-table__cell">
                        @if (plan.IsComplete)
                        {
                            @await Component.InvokeAsync("Tag", new { Colour = TagColour.GdsGreen, DisplayText = "Complete" })
                        }
                        else
                        {
                            @await Component.InvokeAsync("Tag", new { Colour = TagColour.Grey, DisplayText = "Incomplete" })
                        }
                    </td>
                    <td class="govuk-table__cell">
                        @if (plan.IsComplete)
                        {
                            <a href="@Url.Action("View", new { urn = Model.Urn, year = plan.Year })" class="govuk-link govuk-link--no-visited-state">
                                View
                            </a>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@await Component.InvokeAsync("SchoolFinanceTools", new { identifier = Model.Urn, tools = new[] { FinanceTools.CompareYourCosts, FinanceTools.BenchmarkCensus } })