@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanCreateViewModel

@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolPlanningTotalIncome;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.School.SchoolName,
    id = Model.School.URN,
    kind = OrganisationTypes.School
})

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @await Html.PartialAsync("_ErrorSummary")
        @using (Html.BeginForm("TotalIncome", "SchoolPlanningCreate", new
                {
                    urn = Model.School.URN,
                    year = Model.PlanInput?.Year
                }, FormMethod.Post, true, new
                {
                    novalidate = "novalidate"
                }))
        {

            <input type="hidden" name="@nameof(Model.Referrer)" value="@Model.Referrer"/>

            <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.TotalIncome)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.TotalIncome)))
                {
                    <p id="@nameof(Model.PlanInput.TotalIncome)-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.TotalIncome)]?.Errors.First().ErrorMessage
                    </p>
                }
                <div class="govuk-input__wrapper">
                    <div class="govuk-input__prefix" aria-hidden="true">Â£</div>
                    <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.TotalIncome)) ? "govuk-input govuk-input--width-10 govuk-input--error" : "govuk-input govuk-input--width-10")"
                           id="@nameof(Model.PlanInput.TotalIncome)"
                           name="@nameof(Model.PlanInput.TotalIncome)"
                           type="number"
                           spellcheck="false"
                           value="@Model.PlanInput?.TotalIncome">
                </div>
            </div>
            <div>
                <button type="submit" class="govuk-button" data-module="govuk-button">
                    Continue
                </button>
            </div>
        }
    </div>
</div>