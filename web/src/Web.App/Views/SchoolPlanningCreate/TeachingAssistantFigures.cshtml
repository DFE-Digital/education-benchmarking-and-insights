@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanCreateViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolPlanningTeachingAssistantFigures;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.School.SchoolName,
    id = Model.School.URN,
    kind = OrganisationTypes.School
})

<div class="govuk-grid-row">
<div class="govuk-grid-column-two-thirds">
@await Html.PartialAsync("_ErrorSummary")
@using (Html.BeginForm("TeachingAssistantFigures", "SchoolPlanningCreate", new
        {
            urn = Model.School.URN,
            year = Model.PlanInput?.Year
        }, FormMethod.Post, true, new
        {
            novalidate = "novalidate"
        }))
{
    <div class="govuk-form-group">
    <fieldset class="govuk-fieldset">
    <div class="govuk-inset-text">
        <p class="govuk-body">
            Enter the full time equivalent teaching assistant figures for each year.
        </p>
    </div>

    @if (Model.PlanInput?.PupilsMixedReceptionYear1.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsMixedReceptionYear1)" value="@Model.PlanInput.PupilsMixedReceptionYear1"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedReceptionYear1)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsMixedReceptionYear1)">
                Teaching assistant figures for reception and year 1
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedReceptionYear1)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsMixedReceptionYear1)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsMixedReceptionYear1)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedReceptionYear1)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsMixedReceptionYear1)"
                   name="@nameof(Model.PlanInput.AssistantsMixedReceptionYear1)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsMixedReceptionYear1">
        </div>
    }

    @if (Model.PlanInput?.PupilsMixedYear1Year2.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsMixedYear1Year2)" value="@Model.PlanInput.PupilsMixedYear1Year2"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear1Year2)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsMixedYear1Year2)">
                Teaching assistant figures for year 1 and year 2
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear1Year2)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsMixedYear1Year2)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsMixedYear1Year2)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear1Year2)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsMixedYear1Year2)"
                   name="@nameof(Model.PlanInput.AssistantsMixedYear1Year2)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsMixedYear1Year2">
        </div>
    }

    @if (Model.PlanInput?.PupilsMixedYear2Year3.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsMixedYear2Year3)" value="@Model.PlanInput.PupilsMixedYear2Year3"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear2Year3)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsMixedYear2Year3)">
                Teaching assistant figures for year 2 and year 3
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear2Year3)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsMixedYear2Year3)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsMixedYear2Year3)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear2Year3)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsMixedYear2Year3)"
                   name="@nameof(Model.PlanInput.AssistantsMixedYear2Year3)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsMixedYear2Year3">
        </div>
    }

    @if (Model.PlanInput?.PupilsMixedYear3Year4.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsMixedYear3Year4)" value="@Model.PlanInput.PupilsMixedYear3Year4"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear3Year4)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsMixedYear3Year4)">
                Teaching assistant figures for year 3 and year 4
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear3Year4)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsMixedYear3Year4)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsMixedYear3Year4)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear3Year4)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsMixedYear3Year4)"
                   name="@nameof(Model.PlanInput.AssistantsMixedYear3Year4)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsMixedYear3Year4">
        </div>
    }

    @if (Model.PlanInput?.PupilsMixedYear4Year5.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsMixedYear4Year5)" value="@Model.PlanInput.PupilsMixedYear4Year5"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear4Year5)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsMixedYear4Year5)">
                Teaching assistant figures for year 4 and year 5
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear4Year5)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsMixedYear4Year5)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsMixedYear4Year5)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear4Year5)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsMixedYear4Year5)"
                   name="@nameof(Model.PlanInput.AssistantsMixedYear4Year5)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsMixedYear4Year5">
        </div>
    }

    @if (Model.PlanInput?.PupilsMixedYear5Year6.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsMixedYear5Year6)" value="@Model.PlanInput.PupilsMixedYear5Year6"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear5Year6)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsMixedYear5Year6)">
                Teaching assistant figures for year 5 and year 6
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear5Year6)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsMixedYear5Year6)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsMixedYear5Year6)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsMixedYear5Year6)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsMixedYear5Year6)"
                   name="@nameof(Model.PlanInput.AssistantsMixedYear5Year6)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsMixedYear5Year6">
        </div>
    }

    @if (Model.PlanInput?.PupilsNursery is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsNursery)" value="@Model.PlanInput.PupilsNursery"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsNursery)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsNursery)">
                Teaching assistant figures for nursery
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsNursery)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsNursery)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsNursery)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsNursery)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsNursery)"
                   name="@nameof(Model.PlanInput.AssistantsNursery)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsNursery">
        </div>
    }

    @if (Model.PlanInput?.PupilsReception.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsReception)" value="@Model.PlanInput.PupilsReception"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsReception)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsReception)">
                Teaching assistant figures for reception
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsReception)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsReception)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsReception)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsReception)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsReception)"
                   name="@nameof(Model.PlanInput.AssistantsReception)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsReception">
        </div>
    }

    @if (Model.PlanInput?.PupilsYear1.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsYear1)" value="@Model.PlanInput.PupilsYear1"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear1)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsYear1)">
                Teaching assistant figures for year 1
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear1)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsYear1)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsYear1)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear1)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsYear1)"
                   name="@nameof(Model.PlanInput.AssistantsYear1)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsYear1">
        </div>
    }

    @if (Model.PlanInput?.PupilsYear2.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsYear2)" value="@Model.PlanInput.PupilsYear2"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear2)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsYear2)">
                Teaching assistant figures for year 2
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear2)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsYear2)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsYear2)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear2)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsYear2)"
                   name="@nameof(Model.PlanInput.AssistantsYear2)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsYear2">
        </div>
    }

    @if (Model.PlanInput?.PupilsYear3.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsYear3)" value="@Model.PlanInput.PupilsYear3"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear3)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsYear3)">
                Teaching assistant figures for year 3
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear3)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsYear3)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsYear3)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear3)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsYear3)"
                   name="@nameof(Model.PlanInput.AssistantsYear3)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsYear3">
        </div>
    }

    @if (Model.PlanInput?.PupilsYear4.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsYear4)" value="@Model.PlanInput.PupilsYear4"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear4)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsYear4)">
                Teaching assistant figures for year 4
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear4)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsYear4)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsYear4)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear4)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsYear4)"
                   name="@nameof(Model.PlanInput.AssistantsYear4)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsYear4">
        </div>
    }

    @if (Model.PlanInput?.PupilsYear5.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsYear5)" value="@Model.PlanInput.PupilsYear5"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear5)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsYear5)">
                Teaching assistant figures for year 5
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear5)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsYear5)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsYear5)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear5)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsYear5)"
                   name="@nameof(Model.PlanInput.AssistantsYear5)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsYear5">
        </div>
    }

    @if (Model.PlanInput?.PupilsYear6.ToInt() is > 0)
    {
        <input type="hidden" name="@nameof(Model.PlanInput.PupilsYear6)" value="@Model.PlanInput.PupilsYear6"/>

        <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear6)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
            <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.AssistantsYear6)">
                Teaching assistant figures for year 6
            </label>
            @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear6)))
            {
                <p id="@nameof(Model.PlanInput.AssistantsYear6)-error" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.AssistantsYear6)]?.Errors.First().ErrorMessage
                </p>
            }
            <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.AssistantsYear6)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                   id="@nameof(Model.PlanInput.AssistantsYear6)"
                   name="@nameof(Model.PlanInput.AssistantsYear6)"
                   type="number"
                   spellcheck="false"
                   value="@Model.PlanInput.AssistantsYear6">
        </div>
    }

    </fieldset>
    </div>
    <button type="submit" class="govuk-button" data-module="govuk-button">
        Continue
    </button>
}
</div>
</div>