@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanCreateViewModel

@if (Model.Plan is { MixedAgeReceptionYear1 : true })

{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedReceptionYear1)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsMixedReceptionYear1)">
            Pupil figures for reception and year 1
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedReceptionYear1)))
        {
            <p id="@nameof(Model.Plan.PupilsMixedReceptionYear1)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsMixedReceptionYear1)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedReceptionYear1)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsMixedReceptionYear1)"
               name="@nameof(Model.Plan.PupilsMixedReceptionYear1)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsMixedReceptionYear1">
    </div>
}


@if (Model.Plan is { MixedAgeYear1Year2 : true })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear1Year2)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsMixedYear1Year2)">
            Pupil figures for year 1 and year 2
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear1Year2)))
        {
            <p id="@nameof(Model.Plan.PupilsMixedYear1Year2)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsMixedYear1Year2)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear1Year2)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsMixedYear1Year2)"
               name="@nameof(Model.Plan.PupilsMixedYear1Year2)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsMixedYear1Year2">
    </div>
}


@if (Model.Plan is { MixedAgeYear2Year3 : true })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear2Year3)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsMixedYear2Year3)">
            Pupil figures for year 2 and year 3
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear2Year3)))
        {
            <p id="@nameof(Model.Plan.PupilsMixedYear2Year3)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsMixedYear2Year3)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear2Year3)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsMixedYear2Year3)"
               name="@nameof(Model.Plan.PupilsMixedYear2Year3)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsMixedYear2Year3">
    </div>
}


@if (Model.Plan is { MixedAgeYear3Year4 : true })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear3Year4)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsMixedYear3Year4)">
            Pupil figures for year 3 and year 4
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear3Year4)))
        {
            <p id="@nameof(Model.Plan.PupilsMixedYear3Year4)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsMixedYear3Year4)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear3Year4)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsMixedYear3Year4)"
               name="@nameof(Model.Plan.PupilsMixedYear3Year4)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsMixedYear3Year4">
    </div>
}


@if (Model.Plan is { MixedAgeYear4Year5 : true })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear4Year5)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsMixedYear4Year5)">
            Pupil figures for year 4 and year 5
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear4Year5)))
        {
            <p id="@nameof(Model.Plan.PupilsMixedYear4Year5)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsMixedYear4Year5)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear4Year5)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsMixedYear4Year5)"
               name="@nameof(Model.Plan.PupilsMixedYear4Year5)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsMixedYear4Year5">
    </div>

}

@if (Model.Plan is { MixedAgeYear5Year6 : true })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear5Year6)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsMixedYear5Year6)">
            Pupil figures for year 5 and year 6
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear5Year6)))
        {
            <p id="@nameof(Model.Plan.PupilsMixedYear5Year6)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsMixedYear5Year6)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsMixedYear5Year6)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsMixedYear5Year6)"
               name="@nameof(Model.Plan.PupilsMixedYear5Year6)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsMixedYear5Year6">
    </div>
}
