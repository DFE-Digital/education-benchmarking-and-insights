@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanCreateViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolPlanningPupilFigures;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.School.SchoolName,
    id = Model.School.URN,
    kind = OrganisationTypes.School
})

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @await Html.PartialAsync("_ErrorSummary")
        @using (Html.BeginForm("PrimaryPupilFigures", "SchoolPlanningCreate", new
                {
                    urn = Model.School.URN,
                    year = Model.PlanInput?.Year
                }, FormMethod.Post, true, new
                {
                    novalidate = "novalidate"
                }))
        {
            <div class="@(ViewData.ModelState.HasError("PupilFigures") ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                <fieldset class="govuk-fieldset">
                    <div class="govuk-inset-text">
                        <p class="govuk-body">
                            Changing the figures here will not change the data already submitted as part of your school census.
                        </p>
                    </div>
                    @if (ViewData.ModelState.HasError("PupilFigures"))
                    {
                        <p id="pupil-figures-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState["PupilFigures"]?.Errors.First().ErrorMessage
                        </p>
                    }
                    <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.PupilsNursery)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                        <label class="govuk-label govuk-label--m" for="@nameof(Model.PlanInput.PupilsNursery)">
                            Full-time equivalent pupil figures for nursery
                        </label>
                        @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.PupilsNursery)))
                        {
                            <p id="@nameof(Model.PlanInput.PupilsNursery)-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.PupilsNursery)]?.Errors.First().ErrorMessage
                            </p>
                        }
                        <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.PupilsNursery)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                               id="@nameof(Model.PlanInput.PupilsNursery)"
                               name="@nameof(Model.PlanInput.PupilsNursery)"
                               type="number"
                               spellcheck="false"
                               value="@Model.PlanInput?.PupilsNursery">
                    </div>

                    @await Html.PartialAsync("_PupilFiguresPrimaryMixed", Model)
                    @await Html.PartialAsync("_PupilFiguresPrimary", Model)

                </fieldset>
            </div>
            <button type="submit" class="govuk-button" data-module="govuk-button">
                Continue
            </button>
        }
    </div>
</div>