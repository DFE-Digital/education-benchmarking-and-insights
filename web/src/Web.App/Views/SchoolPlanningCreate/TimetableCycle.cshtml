@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanCreateViewModel

@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolPlanningTimetableCycle;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @await Html.PartialAsync("_ErrorSummary")
        
        <span class="govuk-caption-l">@Model.School.SchoolName</span>
        <h1 class="govuk-heading-l">@ViewData[ViewDataKeys.Title]</h1>
        <div class="govuk-inset-text">
            <p class="govuk-body">
                The length of your timetable cycle is the number of periods before it repeats itself.
            </p>
            <p class="govuk-body">
                For example, a timetable that repeats weekly with 5 periods per day would give you a cycle length of 25 periods
            </p>
            <p class="govuk-body">
                Enter an average if your school has a different timetable length for different years
            </p>
        </div>
        @using (Html.BeginForm("TimetableCycle", "SchoolPlanningCreate", new { urn = Model.School.URN, year = Model.PlanInput?.Year }, FormMethod.Post, true, new { novalidate = "novalidate" }))
        {
            <input type="hidden" name="@nameof(Model.Referrer)" value="@Model.Referrer"/>
            <div class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.TimetablePeriods)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                <label class="govuk-label govuk-label--m" for="timetable-periods">
                    How many periods are there in one timetable cycle?
                </label>
                @if (ViewData.ModelState.HasError(nameof(Model.PlanInput.TimetablePeriods)))
                {
                    <p id="@nameof(Model.PlanInput.TimetablePeriods)-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.PlanInput.TimetablePeriods)]?.Errors.First().ErrorMessage
                    </p>
                }
                <input class="@(ViewData.ModelState.HasError(nameof(Model.PlanInput.TimetablePeriods)) ? "govuk-input govuk-!-width-one-third govuk-input--error" : "govuk-input govuk-!-width-one-third")"
                       id="timetable-periods"
                       name="@nameof(Model.PlanInput.TimetablePeriods)"
                       type="number"
                       spellcheck="false"
                       value="@Model.PlanInput?.TimetablePeriods">
            </div>
            <button type="submit" class="govuk-button" data-module="govuk-button">
                Continue
            </button>
        }
    </div>
</div>