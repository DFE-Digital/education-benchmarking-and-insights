@using Web.App.Extensions
@model Web.App.ViewModels.SchoolPlanCreateViewModel

@if (Model.Plan is { MixedAgeReceptionYear1: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsReception)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsReception)">
            Pupil figures for reception
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsReception)))
        {
            <p id="@nameof(Model.Plan.PupilsReception)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsReception)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsReception)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsReception)"
               name="@nameof(Model.Plan.PupilsReception)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsReception">
    </div>
}

@if (Model.Plan is { MixedAgeYear1Year2: false, MixedAgeReceptionYear1: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear1)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear1)">
            Pupil figures for year 1
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear1)))
        {
            <p id="@nameof(Model.Plan.PupilsYear1)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear1)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear1)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsYear1)"
               name="@nameof(Model.Plan.PupilsYear1)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsYear1">
    </div>
}


@if (Model.Plan is { MixedAgeYear2Year3: false, MixedAgeYear1Year2: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear2)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear2)">
            Pupil figures for year 2
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear2)))
        {
            <p id="@nameof(Model.Plan.PupilsYear2)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear2)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear2)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsYear2)"
               name="@nameof(Model.Plan.PupilsYear2)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsYear2">
    </div>
}

@if (Model.Plan is { MixedAgeYear3Year4: false, MixedAgeYear2Year3: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear3)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear3)">
            Pupil figures for year 3
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear3)))
        {
            <p id="@nameof(Model.Plan.PupilsYear3)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear3)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear3)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsYear3)"
               name="@nameof(Model.Plan.PupilsYear3)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsYear3">
    </div>
}

@if (Model.Plan is { MixedAgeYear4Year5: false, MixedAgeYear3Year4: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear4)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear4)">
            Pupil figures for year 4
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear4)))
        {
            <p id="@nameof(Model.Plan.PupilsYear4)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear4)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear4)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsYear4)"
               name="@nameof(Model.Plan.PupilsYear4)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsYear4">
    </div>
}

@if (Model.Plan is { MixedAgeYear5Year6: false, MixedAgeYear4Year5: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear5)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear5)">
            Pupil figures for year 5
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear5)))
        {
            <p id="@nameof(Model.Plan.PupilsYear5)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear5)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear5)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsYear5)"
               name="@nameof(Model.Plan.PupilsYear5)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsYear5">
    </div>
}

@if (Model.Plan is { MixedAgeYear5Year6: false })
{
    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear6)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear6)">
            Pupil figures for year 6
        </label>
        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear6)))
        {
            <p id="@nameof(Model.Plan.PupilsYear6)-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear6)]?.Errors.First().ErrorMessage
            </p>
        }
        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear6)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
               id="@nameof(Model.Plan.PupilsYear6)"
               name="@nameof(Model.Plan.PupilsYear6)"
               type="number"
               spellcheck="false"
               value="@Model.Plan.PupilsYear6">
    </div>
}