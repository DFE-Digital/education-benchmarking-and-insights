@using Newtonsoft.Json
@using Web.App.Extensions
@model Web.App.ViewModels.TrustComparisonViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.TrustComparison;
    const string eventType = "compare-your-costs-loaded";
}

@await Html.PartialAsync("_SaveChartsButton", null, new ViewDataDictionary(ViewData)
{
    { "FileName", $"benchmark-spending-{Model.CompanyNumber}.zip" },
    { "WaitForEventType", eventType }
})

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.CompanyNumber,
    kind = OrganisationTypes.Trust
})

@await Component.InvokeAsync("DataSource", new
{
    organisationType = OrganisationTypes.Trust,
    sourceType = DataSourceTypes.Spending,
    isPartOfTrust = true,
    additionText = new[] { "View the spending between schools in this trust." }
})

@if (Model.NumberOfSchools > 0)
{
    <div id="compare-your-costs"
         data-type="@OrganisationTypes.Trust"
         data-id="@Model.CompanyNumber"
         data-phases="@Model.Phases.ToJson(Formatting.None)"
         data-dispatch-event-type="@eventType">
    </div>
}

@await Component.InvokeAsync("TrustFinanceTools", new
{
    identifier = Model.CompanyNumber, 
    tools = new[]
    {
        FinanceTools.BenchmarkCensus,
        FinanceTools.CentralServices,
        FinanceTools.ForecastRisk,
        FinanceTools.FinancialPlanning
    }
})