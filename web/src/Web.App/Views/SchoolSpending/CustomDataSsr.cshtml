@using Web.App.ViewModels.Enhancements
@model Web.App.ViewModels.SchoolSpendingViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.Spending;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = PageTitles.Spending,
    name = Model.Name,
    id = Model.Urn,
    kind = OrganisationTypes.School
})

@await Component.InvokeAsync("CustomDataBanner", new
{
    name = Model.Name,
    id = Model.Urn
})

@if (Model.HighPriorityCosts.Any() || Model.MediumPriorityCosts.Any())
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m govuk-!-font-size-36">Priority cost categories</h2>
            <p class="govuk-body">This shows where spending is different to similar schools.</p>
        </div>
    </div>

    @await Component.InvokeAsync("SchoolSpendingCostsSsr", new
    {
        costs = Model.HighPriorityCosts,
        id = "high-priority",
        urn = Model.Urn,
        isCustomData = true,
        isPartOfTrust = Model.IsPartOfTrust,
        resources = Model.Resources
    })

    @await Component.InvokeAsync("SchoolSpendingCostsSsr", new
    {
        costs = Model.MediumPriorityCosts,
        id = "medium-priority",
        urn = Model.Urn,
        isCustomData = true,
        isPartOfTrust = Model.IsPartOfTrust,
        resources = Model.Resources
    })
}

@if (Model.LowPriorityCosts.Any())
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m govuk-!-font-size-36">Low priority cost categories</h2>
            <p class="govuk-body">This shows where spending is close to similar schools.</p>
        </div>
    </div>

    @await Component.InvokeAsync("SchoolSpendingCostsSsr", new
    {
        costs = Model.LowPriorityCosts,
        id = "low-priority",
        urn = Model.Urn,
        isCustomData = true,
        isPartOfTrust = Model.IsPartOfTrust
    })
}

@await Component.InvokeAsync("CustomDataFinanceTools", new
{
    identifier = Model.Urn,
    tools = new[]
    {
        FinanceTools.SpendingComparison,
        FinanceTools.CompareYourCosts,
        FinanceTools.BenchmarkCensus
    }
})

@section scripts
{
    @await Html.PartialAsync("Enhancements/_PageActions", new PageActionsViewModel
    {
        CostCodesAttr = "data-cost-codes",
        ElementId = "page-actions-button",
        SaveClassName = "costs-chart-wrapper",
        SaveFileName = $"spending-priorities-{Model.Urn}.zip",
        SaveTitleAttr = "data-title"
    })

    @await Html.PartialAsync("Enhancements/_ChartActions", new ChartActionsViewModel
    {
        DataSetAttribute = "chart-actions",
        ShowCopy = true,
        ShowSave = true,
        ShowTitle = true
    })
}