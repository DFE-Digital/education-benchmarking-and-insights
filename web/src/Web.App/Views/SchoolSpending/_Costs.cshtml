@using Newtonsoft.Json
@using Web.App.Domain
@using Web.App.Extensions
@using Web.App.ViewModels
@model Web.App.ViewModels.CostsViewModel

@if (Model.Costs.Any())
{
    var costs = Model.Costs.ToList();

    @for (var i = 0; i < costs.Count; i++)
    {
        var category = costs[i];

        var data = category.Values.Select(x => new
        {
            urn = x.Key,
            amount = x.Value.Value
        }).ToArray();

        var filteredData = data.Where(x => x.urn == Model.Urn || x.amount > 0).ToArray();

        var hasNegativeOrZeroValues = data.Length > filteredData.Length;

        var categoryHeading = category.Rating.Category == Category.NonEducationalSupportStaff
            ? "Non-educational support staff"
            : category.Rating.Category;

        var categoryUri = Model.IsCustomData
            ? Url.Action("CustomData", "SchoolComparison", new
            {
                urn = Model.Urn
            })
            : Url.Action("Index", "SchoolComparison", new
            {
                urn = Model.Urn
            });

        var uuid = Guid.NewGuid();

        <section id="spending-priorities-@category.Rating.CostCategoryAnchorId">
            <div class="govuk-grid-row govuk-!-margin-bottom-2"
                 @(i == 0 ? $"id={Model.Id}" : "")>
                <div class="govuk-grid-column-two-thirds">
                    <h3 class="govuk-heading-s govuk-!-font-size-27">@categoryHeading</h3>
                </div>
                @if (!Model.IsCustomData)
                {
                    <div class="govuk-grid-column-one-third">
                        <div
                            data-share-content-by-element-id
                            data-element-id="@uuid"
                            data-title="@categoryHeading"
                            data-show-title="true"
                            data-copy-event-id="copy-chart-as-image"
                            data-save-event-id="save-chart-as-image">
                        </div>
                    </div>
                }
                
                @if (category.SubCategories.Any())
                {
                    <div class="govuk-grid-column-full">
                        <ul class="app-cost-code-list">
                            @foreach(var subCategory in category.SubCategories)
                            {
                                var costCode = Model.CostCodes.GetCostCode(subCategory);
                                if (!string.IsNullOrWhiteSpace(costCode))
                                {
                                    <li><strong class="govuk-tag">@costCode</strong></li> 
                                }   
                            }
                        </ul>
                    </div>
                }
                <div class="govuk-grid-column-full">
                    <p
                        class="priority @category.Rating.PriorityTag?.Class govuk-body govuk-!-margin-bottom-0"
                        data-testid="@categoryHeading-rag-commentary">
                        @await Component.InvokeAsync("Tag", new
                        {
                            rating = new RatingViewModel(category.Rating.PriorityTag?.Colour, category.Rating.PriorityTag?.DisplayText)
                        })
                        @await Html.PartialAsync("_RagRatingCommentary", new RagRatingCommentaryViewModel
                        {
                            Rating = category.Rating
                        })
                    </p>
                </div>
            </div>

            <div class="govuk-grid-row govuk-!-margin-bottom-4">
                <div class="govuk-grid-column-two-thirds">
                    <div id="@uuid">
                        @if (hasNegativeOrZeroValues)
                        {
                            <div class="govuk-warning-text">
                                <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                                <strong class="govuk-warning-text__text">
                                    <span class="govuk-visually-hidden">Warning</span>
                                    Only displaying schools with positive expenditure.
                                </strong>
                            </div>
                        }

                        <div class="govuk-!-margin-bottom-2 composed-container costs-chart-wrapper"
                             data-spending-and-costs-composed
                             data-json="@filteredData.ToJson(Formatting.None)"
                             data-highlight="@Model.Urn"
                             data-suffix="@category.Rating.Unit"
                             data-sort-direction="asc"
                             data-stats="@SchoolSpendingViewModel.Stats(category.Rating).ToJson(Formatting.None)"
                             data-has-incomplete-data="@Model.HasIncompleteData"
                             data-title="@categoryHeading">
                        </div>
                    </div>

                    <p class="govuk-body category-commentary">
                        <a href="@categoryUri#@category.Rating.CostCategoryAnchorId"
                           class="govuk-link govuk-link--no-visited-state">View
                            all @category.Rating.Category?.ToLower(true) costs</a>@(category.SubCategories.Any() ? ". " : string.Empty)
                        @if (category.SubCategories.Any())
                        {
                            @:This includes
                            for (var j = 0; j < category.SubCategories.Length; j++)
                            {
                                var subCategory = category.SubCategories.ElementAt(j).ToLower(true);
                                if (j < category.SubCategories.Length - 2)
                                {
                                    subCategory = $"{subCategory}, ";
                                }
                                else if (j == category.SubCategories.Length - 1)
                                {
                                    subCategory = $"{(category.SubCategories.Length > 1 ? "and " : string.Empty)} {subCategory}.";
                                }
                                <span>@subCategory</span>
                            }
                        }
                    </p>
                </div>
                <div class="govuk-grid-column-one-third">
                    @if (category.CanShowCommercialResources)
                    {
                        <div class="app-resources @(hasNegativeOrZeroValues ? "app-resources-warning-spacing" : "")">
                            <h4 class="govuk-heading-s">
                                Find ways to spend less
                            </h4>
                            @await Html.PartialAsync(category.Rating.ResourcePartial, new ResourceViewModel(false))
                        </div>
                    }
                </div>
            </div>
        </section>
    }
}