@using Web.App.Extensions
@using Newtonsoft.Json
@using Web.App.ViewModels
@using Web.App.Domain

@model CostsViewModel

@if (Model.Costs.Any())
{
    var costs = Model.Costs.ToList();
        
    @for (var i = 0; i < costs.Count; i++)
    {
        var category = costs[i];
        
        var categoryToLower = category.Rating.Category switch
        {
            Category.Other => "other",
            Category.EducationalIct => "Educational ICT",
            _ => category.Rating.Category?.ToLower()
        };

        var categoryHeading = category.Rating.Category == Category.NonEducationalSupportStaff
            ? "Non-educational support staff"
            : category.Rating.Category;

        var categoryUri = Model.IsCustomData
            ? Url.Action("CustomData", "SchoolComparison", new { urn = Model.Urn })
            : Url.Action("Index", "SchoolComparison", new { urn = Model.Urn });

        <div class="govuk-grid-row govuk-!-margin-bottom-4"
             @(i == 0 ? $"id={Model.Id}" : "")>
            <div class="govuk-grid-column-two-thirds">
                <h3 class="govuk-heading-s govuk-!-font-size-27">@categoryHeading</h3>
                <p class="priority @category.Rating.PriorityTag?.Class govuk-body govuk-!-margin-bottom-0">
                    @await Component.InvokeAsync("Tag", new { rating = new RatingViewModel(category.Rating.PriorityTag?.Colour, category.Rating.PriorityTag?.DisplayText) })
                    Spending is higher than <strong>@category.Rating.Percentile.ToPercent()</strong> of similar schools.
                </p>
                <div class="govuk-!-margin-bottom-2 composed-container"
                     data-spending-and-costs-composed
                     data-json="@category.Values.Select(x => new { urn = x.Key, amount = x.Value.Value }).ToArray().ToJson(Formatting.None)"
                     data-highlight="@Model.Urn"
                     data-suffix="@category.Rating.Unit"
                     data-sort-direction="asc"
                     data-stats="@SchoolSpendingViewModel.Stats(category.Rating).ToJson(Formatting.None)"
                     data-has-incomplete-data="@Model.HasIncompleteData">
                </div>
                <p class="govuk-body">
                    <a href="@categoryUri#@category.Rating.CostCategoryAnchorId" class="govuk-link govuk-link--no-visited-state">View all @categoryToLower costs</a>
                </p>
            </div>
        </div>
    }
}