@using Web.App.Extensions
@using Newtonsoft.Json
@using Web.App.ViewModels
@model Web.App.ViewModels.SchoolSpendingViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.Spending;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.Urn,
    kind = OrganisationTypes.School
})

@await Component.InvokeAsync("DataSource", new
{
    kind = OrganisationTypes.School,
    isPartOfTrust = Model.IsPartOfTrust
})

@await Component.InvokeAsync("ComparatorSetDetails", new
{
    identifier = Model.Urn,
    hasUserDefinedSet = !string.IsNullOrEmpty(Model.UserDefinedSetId),
    hasCustomData = !string.IsNullOrEmpty(Model.CustomDataId)
})

@if (Model.PriorityCosts.Any())
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m govuk-!-font-size-36">Priority cost categories</h2>
            <p class="govuk-body">This shows where spending is different to similar schools.</p>
        </div>
    </div>

    @foreach (var category in Model.PriorityCosts)
    {
        var categoryToLower = @category.Rating.Category == "Other costs"
            ? "other"
            : @category.Rating.Category == "Educational ICT"
            ? "Educational ICT"
            : @category.Rating.Category?.ToLower();

        var categoryHeading = @category.Rating.Category == "Non-educational support staff and services"
            ? "Non-educational support staff"
            : @category.Rating.Category;

        <div class="govuk-grid-row govuk-!-margin-bottom-4">
            <div class="govuk-grid-column-two-thirds">
                <h3 class="govuk-heading-s govuk-!-font-size-27">@categoryHeading</h3>
                <p class="priority @category.Rating.PriorityTag?.Class govuk-body govuk-!-margin-bottom-0">
                    @await Component.InvokeAsync("Tag", new { rating = new RatingViewModel(category.Rating.PriorityTag?.Colour, category.Rating.PriorityTag?.DisplayText) })
                    Spending is higher than <strong>@category.Rating.Percentile.ToPercent()</strong> of similar schools.
                </p>
                <div class="govuk-!-margin-bottom-2"
                     data-spending-and-costs-composed
                     data-json="@category.Values.Select(x => new { urn = x.Key, amount = x.Value.Value }).ToArray().ToJson(Formatting.None)"
                     data-highlight="@Model.Urn"
                     data-suffix="@category.Rating.Unit"
                     data-sort-direction="asc"
                     data-stats="@SchoolSpendingViewModel.Stats(category.Rating).ToJson(Formatting.None)"
                     data-has-incomplete-data="@Model.HasIncompleteData">
                </div>
                <p class="govuk-body">
                        <a href="comparison#@category.Rating.CostCategoryAnchorId" class="govuk-link govuk-link--no-visited-state">View all @categoryToLower costs</a>
                </p>
            </div>
        </div>
    }
}

@if (Model.LowPriorityCosts.Any())
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m govuk-!-font-size-36">Low priority cost categories</h2>
            <p class="govuk-body">This shows where spending is close to similar schools.</p>
        </div>
    </div>

    @foreach (var category in Model.LowPriorityCosts)
    {
        var categoryToLower = @category.Rating.Category == "Other costs"
            ? "other"
            : @category.Rating.Category == "Educational ICT"
            ? "Educational ICT"
            : @category.Rating.Category?.ToLower();

        var categoryHeading = @category.Rating.Category == "Non-educational support staff and services"
            ? "Non-educational support staff"
            : @category.Rating.Category;

        <div class="govuk-grid-row govuk-!-margin-bottom-4">
            <div class="govuk-grid-column-two-thirds">
                <h3 class="govuk-heading-s govuk-!-font-size-27">@categoryHeading</h3>
                <p class="priority @category.Rating.PriorityTag?.Class govuk-body">
                    @await Component.InvokeAsync("Tag", new { rating = new RatingViewModel(category.Rating.PriorityTag?.Colour, category.Rating.PriorityTag?.DisplayText) })
                    Spends more than <strong>@category.Rating.Percentile.ToPercent()</strong> of similar schools.
                </p>
                <div class="govuk-!-margin-bottom-2"
                     data-spending-and-costs-composed
                     data-json="@category.Values.Select(x => new { urn = x.Key, amount = x.Value.Value }).ToArray().ToJson(Formatting.None)"
                     data-highlight="@Model.Urn"
                     data-suffix="@category.Rating.Unit"
                     data-sort-direction="asc"
                     data-stats="@SchoolSpendingViewModel.Stats(category.Rating).ToJson(Formatting.None)"
                     data-has-incomplete-data="@Model.HasIncompleteData">
                </div>
                <p class="govuk-body">
                    <a href="comparison#@category.Rating.CostCategoryAnchorId" class="govuk-link govuk-link--no-visited-state">View all @categoryToLower costs</a>
                </p>
            </div>
        </div>
    }
}
