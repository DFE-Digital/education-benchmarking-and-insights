@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Web.App.Domain
@using Web.App.Extensions
@using Web.App.ViewModels
@model Web.App.ViewModels.TrustSpendingViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.TrustSpending;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.CompanyNumber,
    kind = OrganisationTypes.Trust
})

@await Component.InvokeAsync("DataSource", new
{
    organisationType = OrganisationTypes.Trust,
    sourceType = DataSourceTypes.Spending,
    isPartOfTrust = true,
    className = "govuk-grid-column-full"
})

<div class="govuk-grid-row">
    <aside class="govuk-grid-column-one-quarter">
        <h3 class="govuk-heading-s">Filter priority schools</h3>

        <form method="get" action="">
            <div class="govuk-form-group">
                <label class="govuk-label" for="priority">
                    Priority
                </label>
                <select class="govuk-select" id="priority" name="priority">
                    <option value="">All priorities</option>
                    <option value="high" selected="@(Model.IsPriorityHigh ? "selected" : null)">High priority</option>
                    <option value="medium" selected="@(Model.IsPriorityMedium ? "selected" : null)">Medium priority</option>
                    <option value="low" selected="@(Model.IsPriorityLow ? "selected" : null)">Low priority</option>
                </select>
            </div>

            <div class="govuk-form-group">
                <label class="govuk-label" for="category">
                    Cost Category
                </label>
                <select class="govuk-select" id="category" name="category">
                    <option value="">All categories</option>
                    <option value="@Category.TeachingStaff.ToSlug()" selected="@(Model.CostCategories.Contains(Category.TeachingStaff.ToSlug()) ? "selected" : null)">@Category.TeachingStaff</option>
                    <option value="@Category.NonEducationalSupportStaff.ToSlug()" selected="@(Model.CostCategories.Contains(Category.NonEducationalSupportStaff.ToSlug()) ? "selected" : null)">@Category.NonEducationalSupportStaff</option>
                    <option value="@Category.EducationalSupplies.ToSlug()" selected="@(Model.CostCategories.Contains(Category.EducationalSupplies.ToSlug()) ? "selected" : null)">@Category.EducationalSupplies</option>
                    <option value="@Category.EducationalIct.ToSlug()" selected="@(Model.CostCategories.Contains(Category.EducationalIct.ToSlug()) ? "selected" : null)">@Category.EducationalIct</option>
                    <option value="@Category.PremisesStaffServices.ToSlug()" selected="@(Model.CostCategories.Contains(Category.PremisesStaffServices.ToSlug()) ? "selected" : null)">@Category.PremisesStaffServices</option>
                    <option value="@Category.Utilities.ToSlug()" selected="@(Model.CostCategories.Contains(Category.Utilities.ToSlug()) ? "selected" : null)">@Category.Utilities</option>
                    <option value="@Category.AdministrativeSupplies.ToSlug()" selected="@(Model.CostCategories.Contains(Category.AdministrativeSupplies.ToSlug()) ? "selected" : null)">@Category.AdministrativeSupplies</option>
                    <option value="@Category.CateringStaffServices.ToSlug()" selected="@(Model.CostCategories.Contains(Category.CateringStaffServices.ToSlug()) ? "selected" : null)">@Category.CateringStaffServices</option>
                    <option value="@Category.Other.ToSlug()" selected="@(Model.CostCategories.Contains(Category.Other.ToSlug()) ? "selected" : null)">@Category.Other</option>
                </select>
            </div>

            <button type="submit" class="govuk-button govuk-button--secondary" data-module="govuk-button">
                Update filter
            </button>
        </form>
    </aside>
    <div class="govuk-grid-column-three-quarters" id="spending-tables">
        @if (Model.CostCategories.Length > 0)
        {
            @foreach (var rating in Model.RatingsByCategory)
            {
                <div>
                    <h2 class="govuk-heading-m" id="@rating.CostCategory?.ToSlug()">@rating.CostCategory</h2>
                    <section id="@rating.CostCategory?.ToSlug()-section">
                        @foreach (var status in rating.Statuses)
                        {
                            <h3 class="govuk-heading-s">@status.PriorityTag?.DisplayText</h3>
                            @await Html.PartialAsync("_PriorityStatus", new TrustSpendingPriorityStatusViewModel(status.PriorityTag, status.Schools.Count(), Model.NumberSchools))
                            @await Html.PartialAsync("_PriorityTable", status.Schools, new ViewDataDictionary(ViewData)
                            {
                                {
                                    "Category", rating.CostCategory
                                },
                                {
                                    "Status", status.Status
                                }
                            })
                        }
                    </section>
                </div>
            }
        }
        else
        {
            @foreach (var rating in Model.RatingsByPriority)
            {
                <h2 class="govuk-heading-m" id="@rating.PriorityTag?.DisplayText.ToSlug()">@rating.PriorityTag?.DisplayText</h2>
                <section id="@rating.PriorityTag?.DisplayText.ToSlug()-section">
                    @foreach (var category in rating.Categories)
                    {
                        <div>
                            <h3 class="govuk-heading-s">@category.Category</h3>
                            @await Html.PartialAsync("_PriorityStatus", new TrustSpendingPriorityStatusViewModel(rating.PriorityTag, category.Schools.Count(), Model.NumberSchools))
                            @await Html.PartialAsync("_PriorityTable", category.Schools, new ViewDataDictionary(ViewData)
                            {
                                {
                                    "Category", category.Category
                                },
                                {
                                    "Status", rating.Status
                                }
                            })
                        </div>
                    }
                </section>
            }
        }
    </div>
</div>

@await Component.InvokeAsync("GetHelp")