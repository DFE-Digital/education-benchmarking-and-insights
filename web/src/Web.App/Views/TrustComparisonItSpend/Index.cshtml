@using Web.App.Attributes
@using Web.App.Domain.Charts
@using Web.App.Extensions
@using Web.App.ViewModels
@model Web.App.ViewModels.TrustComparisonItSpendViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.ComparisonItSpend;
    var routeValues = new Dictionary<string, object?>
    {
        { "companyNumber", Model.CompanyNumber },
        { PersistRedirectUriQueryAttribute.RedirectUriQuery, Model.RedirectUri }
    };
    var comparatorCount = Model.UserDefinedSet == null ? 0 : Model.UserDefinedSet.Length - 1;
}

@await Component.InvokeAsync("EstablishmentHeading", new
{
    title = ViewData[ViewDataKeys.Title],
    name = Model.Name,
    id = Model.CompanyNumber,
    kind = OrganisationTypes.Trust
})

<div class="govuk-grid-row govuk-!-margin-bottom-6">
    @if (Model.ComparatorGenerated.HasValue)
    {
        <div class="govuk-grid-column-full">
            @{
                var success = Model.ComparatorGenerated == true;
            }
            <div class="govuk-notification-banner govuk-notification-banner--@(success ? "success" : "failure")" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
                <div class="govuk-notification-banner__header">
                    <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                        @(success ? "Success" : "Error")
                    </h2>
                </div>
                <div class="govuk-notification-banner__content">
                    <h3 class="govuk-notification-banner__heading">@(success ? "You've created a set of trusts to compare" : "Unable to create a set of trusts to compare")</h3>
                    @if (!success)
                    {
                        <p class="govuk-body">
                            Please try again later.
                        </p>
                    }
                </div>
            </div>
        </div>
    }
    
    <div class="govuk-grid-column-two-thirds">
        <p class="govuk-body">
            <a class="govuk-link govuk-link--no-visited-state"
               href="@Url.Action("UserDefined", "TrustComparators", routeValues)"
               data-test-id="comparators-link">
                You have chosen @(comparatorCount) similar @(comparatorCount == 1 ? "trust" : "trusts")</a>
            to benchmark this trust's spending against.
        </p>
        <div class="govuk-inset-text govuk-!-margin-top-4 govuk-!-margin-bottom-4">
            The Budget Forecast Return (BFR) data set is being used.
        </div>
        <p class="govuk-body">
            If there is no data available to show we have highlighted this on the charts and tables.
        </p>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">
        @await Html.PartialAsync("_ItSpendFilter", Model)
    </div>
    <div class="govuk-grid-column-two-thirds">
        @for (var i = 0; i < Model.SubCategories.Count; i++)
        {
            var subCategory = Model.SubCategories.ElementAt(i);
            var uuid = Guid.NewGuid();

            <section id="cost-sub-category-@subCategory.SubCategory?.ToSlug()">
                <h2 class="govuk-heading-m">@subCategory.SubCategory</h2>

                @if (Model.ViewAs == Views.ViewAsOptions.Chart)
                {
                    @await Html.PartialAsync("_ItSpendChart", new TrustComparisonItSpendChartViewModel(uuid, subCategory, Model.CurrentBfrYear))
                    @if (i <= Model.SubCategories.Count)
                    {
                        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible govuk-!-margin-bottom-6">
                    }
                }
            </section>
        }
    </div>
</div>


@section scripts
{
    <script type="module" add-nonce="true">
        import {initAll} from '/js/govuk-frontend.min.js'

        initAll()
    </script>
}