@using EducationBenchmarking.Web.Extensions
@model EducationBenchmarking.Web.ViewModels.SchoolPlanCreateViewModel
@{
    ViewData[ViewDataKeys.Title] = PageTitles.SchoolPlanningPupilFigures;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm("PupilFigures", "SchoolPlanningCreate", new { urn = Model.School.Urn, year = Model.Plan?.Year }, FormMethod.Post, true, new { novalidate = "novalidate" }))
        {
            <div class="@(ViewData.ModelState.HasError("PupilFigures") ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                        <span class="govuk-caption-l">@Model.School.Name</span>
                        <h1 class="govuk-fieldset__heading">
                            @ViewData[ViewDataKeys.Title]
                        </h1>
                    </legend>
                    <div class="govuk-inset-text">
                        <p class="govuk-body">
                            Changing the figures here will not change the data already submitted as part of your school census.
                        </p>
                    </div>
                    @if (ViewData.ModelState.HasError("PupilFigures"))
                    {
                        <p id="pupil-figures-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState["PupilFigures"]?.Errors.First().ErrorMessage
                        </p>
                    }
                    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear7)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear7)">
                            Pupil figures for year 7
                        </label>
                        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear7)))
                        {
                            <p id="@nameof(Model.Plan.PupilsYear7)-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear7)]?.Errors.First().ErrorMessage
                            </p>
                        }
                        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear7)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                               id="@nameof(Model.Plan.PupilsYear7)"
                               name="@nameof(Model.Plan.PupilsYear7)"
                               type="number"
                               spellcheck="false"
                               value="@Model.Plan?.PupilsYear7">
                    </div>

                    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear8)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear8)">
                            Pupil figures for year 8
                        </label>
                        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear8)))
                        {
                            <p id="@nameof(Model.Plan.PupilsYear8)-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear8)]?.Errors.First().ErrorMessage
                            </p>
                        }
                        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear8)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                               id="@nameof(Model.Plan.PupilsYear8)"
                               name="@nameof(Model.Plan.PupilsYear8)"
                               type="number"
                               spellcheck="false"
                               value="@Model.Plan?.PupilsYear8">
                    </div>

                    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear9)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear9)">
                            Pupil figures for year 9
                        </label>
                        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear9)))
                        {
                            <p id="@nameof(Model.Plan.PupilsYear9)-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear9)]?.Errors.First().ErrorMessage
                            </p>
                        }
                        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear9)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                               id="@nameof(Model.Plan.PupilsYear9)"
                               name="@nameof(Model.Plan.PupilsYear9)"
                               type="number"
                               spellcheck="false"
                               value="@Model.Plan?.PupilsYear9">
                    </div>

                    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear10)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear10)">
                            Pupil figures for year 10
                        </label>
                        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear10)))
                        {
                            <p id="@nameof(Model.Plan.PupilsYear10)-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear10)]?.Errors.First().ErrorMessage
                            </p>
                        }
                        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear10)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                               id="@nameof(Model.Plan.PupilsYear10)"
                               name="@nameof(Model.Plan.PupilsYear10)"
                               type="number"
                               spellcheck="false"
                               value="@Model.Plan?.PupilsYear10">
                    </div>

                    <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear11)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                        <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear11)">
                            Pupil figures for year 11
                        </label>
                        @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear11)))
                        {
                            <p id="@nameof(Model.Plan.PupilsYear11)-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear11)]?.Errors.First().ErrorMessage
                            </p>
                        }
                        <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear11)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                               id="@nameof(Model.Plan.PupilsYear11)"
                               name="@nameof(Model.Plan.PupilsYear11)"
                               type="number"
                               spellcheck="false"
                               value="@Model.Plan?.PupilsYear11">
                    </div>

                    @if (Model.School.HasSixthForm)
                    {
                        <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear12)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                            <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear12)">
                                Full-time equivalent pupil figures for year 12
                            </label>
                            @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear12)))
                            {
                                <p id="@nameof(Model.Plan.PupilsYear12)-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear12)]?.Errors.First().ErrorMessage
                                </p>
                            }
                            <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear12)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                                   id="@nameof(Model.Plan.PupilsYear12)"
                                   name="@nameof(Model.Plan.PupilsYear12)"
                                   type="number"
                                   spellcheck="false"
                                   value="@Model.Plan?.PupilsYear12">
                        </div>

                        <div class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear13)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                            <label class="govuk-label govuk-label--m" for="@nameof(Model.Plan.PupilsYear13)">
                                Full-time equivalent pupil figures for year 13
                            </label>
                            @if (ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear13)))
                            {
                                <p id="@nameof(Model.Plan.PupilsYear13)-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.Plan.PupilsYear13)]?.Errors.First().ErrorMessage
                                </p>
                            }
                            <input class="@(ViewData.ModelState.HasError(nameof(Model.Plan.PupilsYear13)) ? "govuk-input govuk-input--width-5 govuk-input--error" : "govuk-input govuk-input--width-5")"
                                   id="@nameof(Model.Plan.PupilsYear13)"
                                   name="@nameof(Model.Plan.PupilsYear13)"
                                   type="number"
                                   spellcheck="false"
                                   value="@Model.Plan?.PupilsYear13">
                        </div>
                    }
                </fieldset>
            </div>
            <button type="submit" class="govuk-button" data-module="govuk-button">
                Continue
            </button>
        }
    </div>
</div>