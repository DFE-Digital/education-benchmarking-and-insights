@using EducationBenchmarking.Web.Extensions
@model EducationBenchmarking.Web.ViewModels.SchoolPlanViewModel

@{
    ViewData[ViewDataConstants.Title] = PageTitleConstants.SchoolPlanningTotalIncome;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <span class="govuk-caption-l">@Model.Name</span>
        <h1 class="govuk-heading-l">@ViewData[ViewDataConstants.Title]</h1>
        @using (Html.BeginForm("TotalIncome", "SchoolPlanningSteps", new { urn = Model.Urn, year = Model.SelectedYear }, FormMethod.Post, true, new { novalidate = "novalidate" }))
        {
            <div class="@(ViewData.ModelState.HasError(nameof(Model.TotalIncome)) ? "govuk-form-group govuk-form-group--error" : "govuk-form-group")">
                <label class="govuk-label govuk-label--m" for="total-income">
                    What is your total income?
                </label>
                <div id="event-name-hint" class="govuk-hint">
                    Enter a value
                </div>
                @if (ViewData.ModelState.HasError(nameof(Model.TotalIncome)))
                {
                    <p id="total-income-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.TotalIncome)]?.Errors.First().ErrorMessage
                    </p>
                }
                <div class="govuk-input__wrapper">
                    <div class="govuk-input__prefix" aria-hidden="true">Â£</div>
                    <input class="govuk-input govuk-input--width-10" id="total-income" name="@nameof(Model.TotalIncome)" type="number" spellcheck="false" value="@Model.TotalIncome">
                </div>
            </div>
            <div>
                <button type="submit" class="govuk-button" data-module="govuk-button">
                    Continue
                </button>
            </div>
        }
    </div>
</div>