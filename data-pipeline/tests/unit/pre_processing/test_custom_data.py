import pandas as pd

from src.pipeline.pre_processing import update_custom_data

_default_custom_data = {
    "administrativeSuppliesNonEducationalCosts": 0.0,
    "cateringStaffCosts": 0.0,
    "cateringSuppliesCosts": 0.0,
    "incomeCateringServices": 0.0,
    "examinationFeesCosts": 0.0,
    "learningResourcesNonIctCosts": 0.0,
    "learningResourcesIctCosts": 0.0,
    "administrativeClericalStaffCosts": 0.0,
    "auditorsCosts": 0.0,
    "otherStaffCosts": 0.0,
    "professionalServicesNonCurriculumCosts": 0.0,
    "cleaningCaretakingCosts": 0.0,
    "maintenancePremisesCosts": 0.0,
    "otherOccupationCosts": 0.0,
    "premisesStaffCosts": 0.0,
    "agencySupplyTeachingStaffCosts": 0.0,
    "educationSupportStaffCosts": 0.0,
    "educationalConsultancyCosts": 0.0,
    "supplyTeachingStaffCosts": 0.0,
    "teachingStaffCosts": 0.0,
    "energyCosts": 0.0,
    "waterSewerageCosts": 0.0,
    "directRevenueFinancingCosts": 0.0,
    "groundsMaintenanceCosts": 0.0,
    "indirectEmployeeExpenses": 0.0,
    "interestChargesLoanBank": 0.0,
    "otherInsurancePremiumsCosts": 0.0,
    "privateFinanceInitiativeCharges": 0.0,
    "rentRatesCosts": 0.0,
    "specialFacilitiesCosts": 0.0,
    "staffDevelopmentTrainingCosts": 0.0,
    "staffRelatedInsuranceCosts": 0.0,
    "supplyTeacherInsurableCosts": 0.0,
    "totalIncome": 0.0,
    "totalExpenditure": 0.0,
    "revenueReserve": 0.0,
    "totalPupils": 0.0,
    "percentFreeSchoolMeals": 0.0,
    "percentSpecialEducationNeeds": 0.0,
    "totalInternalFloorArea": 0.0,
    "workforceFTE": 0.0,
    "teachersFTE": 0.0,
    "seniorLeadershipFTE": 0.0,
}

_default_existing_data = {
    "Administrative supplies_Administrative supplies (non educational)": [
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    "Catering staff and supplies_Catering staff": [0.0, 0.0, 0.0, 0.0],
    "Catering staff and supplies_Net Costs": [0.0, 0.0, 0.0, 0.0],
    "Income_Catering services": [0.0, 0.0, 0.0, 0.0],
    "Educational supplies_Examination fees": [0.0, 0.0, 0.0, 0.0],
    "Educational supplies_Learning resources (not ICT equipment)": [0.0, 0.0, 0.0, 0.0],
    "Educational ICT_ICT learning resources": [0.0, 0.0, 0.0, 0.0],
    "Non-educational support staff and services_Administrative and clerical staff": [
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    "Non-educational support staff and services_Audit cost": [0.0, 0.0, 0.0, 0.0],
    "Non-educational support staff and services_Other staff": [0.0, 0.0, 0.0, 0.0],
    "Non-educational support staff and services_Professional services (non-curriculum)": [
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    "Premises staff and services_Cleaning and caretaking": [0.0, 0.0, 0.0, 0.0],
    "Premises staff and services_Maintenance of premises": [0.0, 0.0, 0.0, 0.0],
    "Premises staff and services_Other occupation costs": [0.0, 0.0, 0.0, 0.0],
    "Premises staff and services_Premises staff": [0.0, 0.0, 0.0, 0.0],
    "Teaching and Teaching support staff_Agency supply teaching staff": [
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    "Teaching and Teaching support staff_Education support staff": [0.0, 0.0, 0.0, 0.0],
    "Teaching and Teaching support staff_Educational consultancy": [0.0, 0.0, 0.0, 0.0],
    "Teaching and Teaching support staff_Teaching staff": [0.0, 0.0, 0.0, 0.0],
    "Teaching and Teaching support staff_Supply teaching staff": [0.0, 0.0, 0.0, 0.0],
    "Utilities_Energy": [0.0, 0.0, 0.0, 0.0],
    "Utilities_Water and sewerage": [0.0, 0.0, 0.0, 0.0],
    "Income_Direct revenue finance": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Grounds maintenance": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Indirect employee expenses": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Interest charges for loan and bank": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Other insurance premiums": [0.0, 0.0, 0.0, 0.0],
    "Other costs_PFI charges": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Rent and rates": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Special facilities": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Staff development and training": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Staff-related insurance": [0.0, 0.0, 0.0, 0.0],
    "Other costs_Supply teacher insurance": [0.0, 0.0, 0.0, 0.0],
    "Income_Total": [0.0, 0.0, 0.0, 0.0],
    "Total Expenditure": [0.0, 0.0, 0.0, 0.0],
    "Revenue reserve": [0.0, 0.0, 0.0, 0.0],
    "Total pupils in trust": [0.0, 0.0, 0.0, 0.0],
    "Percentage Free school meals": [0.0, 0.0, 0.0, 0.0],
    "Percentage SEN": [0.0, 0.0, 0.0, 0.0],
    "Total Internal Floor Area": [0.0, 0.0, 0.0, 0.0],
    "Total School Workforce (Full-Time Equivalent)": [0.0, 0.0, 0.0, 0.0],
    "Total Number of Teachers (Full-Time Equivalent)": [0.0, 0.0, 0.0, 0.0],
    "Total Number of Teachers in the Leadership Group (Full-time Equivalent)": [
        0.0,
        0.0,
        0.0,
        0.0,
    ],
}


def test_update_custom_data():
    df = pd.DataFrame(_default_existing_data, index=[0, 1, 2, 3])
    custom_data = _default_custom_data | {
        "totalInternalFloorArea": 1.0,
        "workforceFTE": 2.0,
    }

    result = update_custom_data(
        existing_data=df,
        custom_data=custom_data,
        target_urn=1,
    )

    assert result.loc[
        1,
        ["Total Internal Floor Area", "Total School Workforce (Full-Time Equivalent)"],
    ].to_list() == [1.0, 2.0]
