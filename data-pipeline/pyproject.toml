[tool.poetry]
name = "fbit-data-pipeline"
version = "0.0.1"
description = "Financial Benchmarking and Insights data pipeline. Supporting the FBIT frontend and API services."
authors = ["Department for Education (DfE)"]
license = "MIT"
readme = "README.md"
packages = [{include = "pipeline", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.2.2"
azure-storage-queue = "^12.9.0"
python-dotenv = "^1.0.1"
openpyxl = "^3.1.2"
azure-storage-blob = "^12.19.1"
psutil = "^5.9.8"
aiohttp = "^3.10.11"
pyarrow = "^16.0.0"
dask = {extras = ["distributed"], version = "^2024.5.0"}
pyodbc = "^5.1.0"
sqlalchemy = "^2.0.30"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
jupyter = "^1.0.0"
black = "^24.4.1"
coverage = "^7.5.0"
requests = "^2.32.0"
httpx = "^0.27.0"
isort = "^5.13.2"
pre-commit = "^3.7.1"
line-profiler = "^4.1.3"
pytest-randomly = "^3.16.0"

[tool.black]
# https://github.com/psf/black
line-length = 88
target_version = ['py310']
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | venv
    | .venv
  )/
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
line_length = 88
indent = '    '
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0


[tool.coverage]
# https://github.com/nedbat/coveragepy
[tool.coverage.run]
source = ["src"]
branch = true
omit = ['main.py', 'storage.py', 'database.py', 'log.py', 'bfr.py']

[tool.coverage.report]
exclude_lines = [
    "# noqa",
    "raise NotImplementedError"
]
exclude_also = [
    "def compute_rag",
    "def compute_category_rag",
    "def compute_comparator_set",
    "def compute_custom_comparator_set"
]

[tool.coverage.html]
directory = "tests/output/html"

[tool.coverage.xml]
output = "tests/output/coverage.xml"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::UserWarning",
    'ignore::DeprecationWarning',
]
pythonpath = ["src"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
in-project = true
path = ".venv"
