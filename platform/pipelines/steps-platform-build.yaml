parameters:
  BuildVersion: ''
  BuildNumber: ''
  
steps:

  - bash: |
      echo "##vso[task.setvariable variable=PLATFORM_CACHE_RESTORED]false"
      echo "##vso[task.setvariable variable=PLATFORM_NUGET_CACHE]$(Pipeline.Workspace)/platform/.nuget"

  - task: NuGetAuthenticate@1

  - task: Cache@2
    condition: not(contains(variables['Build.SourceVersionMessage'], '[no cache]'))
    displayName: 'Cache nuget packages'
    inputs:
      key: 'nuget | "$(Agent.OS)-platform" | platform/src/search/**/packages.lock.json,platform/src/apis/**/packages.lock.json,platform/src/db/**/packages.lock.json,!**/bin/**,!**/obj/**'
      path: $(PLATFORM_NUGET_CACHE)
      cacheHitVar: PLATFORM_CACHE_RESTORED

  - task: DotNetCoreCLI@2
    displayName: 'Restore nuget packages'
    condition: ne(variables.PLATFORM_CACHE_RESTORED, 'true')
    inputs:
      command: restore
      packagesDirectory: $(PLATFORM_NUGET_CACHE)
      projects: |
        platform/src/search/**/*.csproj
        platform/src/apis/**/*.csproj
        platform/src/db/**/*.csproj
      feedsToUse: 'config'
      nugetConfigPath: 'platform/nuget.config'
      
  - task: DotNetCoreCLI@2
    displayName: 'Build platform database'
    inputs:
        command: publish
        publishWebProjects: false
        projects: 'platform/src/db/EducationBenchmarking.Platform.Database/EducationBenchmarking.Platform.Database.csproj'
        packagesDirectory: $(PLATFORM_NUGET_CACHE)
        arguments: '-c Release -o $(Build.ArtifactStagingDirectory)/platform-db /p:Version=${{ parameters.BuildVersion }} /p:InformationalVersion=${{ parameters.BuildNumber }}'
        zipAfterPublish: true
        modifyOutputPath: true

  - task: DotNetCoreCLI@2
    displayName: 'Build platform search'
    inputs:
      command: publish
      publishWebProjects: false
      packagesDirectory: $(PLATFORM_NUGET_CACHE)
      projects: |
        platform/src/search/EducationBenchmarking.Platform.Search.App/EducationBenchmarking.Platform.Search.App.csproj
        platform/src/search/EducationBenchmarking.Platform.Search.Processor/EducationBenchmarking.Platform.Search.Processor.csproj
      arguments: '-c Release -o $(Build.ArtifactStagingDirectory)/platform-search /p:Version=${{ parameters.BuildVersion }} /p:InformationalVersion=${{ parameters.BuildNumber }}'
      zipAfterPublish: true
      modifyOutputPath: true

  - task: DotNetCoreCLI@2
    displayName: 'Build platform apis'
    inputs:
      command: publish
      publishWebProjects: false
      packagesDirectory: $(PLATFORM_NUGET_CACHE)
      projects: 'platform/src/apis/**/*.csproj'
      arguments: '-c Release -r win-x86 -p:PublishReadyToRun=true -o $(Build.ArtifactStagingDirectory)/platform-apis /p:Version=${{ parameters.BuildVersion }} /p:InformationalVersion=${{ parameters.BuildNumber }}'
      zipAfterPublish: true
      modifyOutputPath: true

  - publish: $(build.artifactstagingdirectory)/platform-db
    artifact: platform-db
    
  - publish: $(build.artifactstagingdirectory)/platform-search
    artifact: platform-search
  
  - publish: $(build.artifactstagingdirectory)/platform-apis
    artifact: platform-apis

  - task: BuildQualityChecks@9
    displayName: 'Check build quality'
    inputs:
      checkWarnings: true
      showStatistics: true
      warningFailOption: fixed
      warningThreshold: 5