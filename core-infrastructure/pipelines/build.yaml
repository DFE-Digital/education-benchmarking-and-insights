pool:
  vmImage: 'ubuntu-latest'

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - core-infrastructure

pr: none

variables:
  TerraformDirectory: $(System.DefaultWorkingDirectory)/core-infrastructure/terraform

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: FmtValidateTf
        displayName: "Lint and validate terraform"
        steps:
          - template: steps-core-fmt-validate-terraform.yaml
            parameters:
              TerraformDirectory: $(TerraformDirectory)

      - job: RunCheckOv
        displayName: "Static analysis terraform"
        steps:
          - template: steps-core-scan-terraform.yaml
            parameters:
              TerraformDirectory: $(TerraformDirectory)

      - job: ZipStaticArtifacts
        displayName: 'Zip static artifacts'
        steps:
          - template: steps-core-publish-static-artifacts.yaml

  - stage: DeployDevelopment
    dependsOn: [Build]
    displayName: 'Development'
    jobs:
      - template: jobs-core-deployment.yaml
        parameters:
          subscription: 's198d.azdo-deployment'
          environmentPrefix: 's198d01'
          environment: 'development'
          cipEnvironment: 'Dev'

  - stage: DeployFunctionalTest
    dependsOn: [Build]
    displayName: 'Functional test'
    jobs:
      - template: jobs-core-deployment.yaml
        parameters:
          subscription: 's198d.azdo-deployment'
          environmentPrefix: 's198d02'
          environment: 'functional-test'
          cipEnvironment: 'Dev'

  - stage: DeployAccessibilityTest
    dependsOn: [Build]
    displayName: 'Accessibility test'
    jobs:
      - template: jobs-core-deployment.yaml
        parameters:
          subscription: 's198d.azdo-deployment'
          environmentPrefix: 's198d03'
          environment: 'accessibility-test'
          cipEnvironment: 'Dev'