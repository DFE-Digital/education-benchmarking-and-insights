pool:
  vmImage: 'ubuntu-latest'

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - shared
      - core-infrastructure

pr: none

variables:
  TerraformFolder: 'core-infrastructure/terraform'
  TerraformDirectory: '$(System.DefaultWorkingDirectory)/$(TerraformFolder)'
  ShouldDeploy: $[and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest'))]

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: FmtValidateTf
        displayName: "Lint and validate terraform"
        steps:
          - template: ..\..\shared\steps-fmt-validate-terraform.yaml
            parameters:
              TerraformDirectory: $(TerraformDirectory)

      - job: RunCheckOv
        displayName: "Static analysis terraform"
        steps:
          - template: ..\..\shared\steps-scan-terraform.yaml
            parameters:
              TerraformDirectory: $(TerraformDirectory)

      - job: ZipStaticArtifacts
        displayName: 'Zip static artifacts'
        steps:
          - template: ..\..\shared\steps-publish-terraform-artifacts.yaml
            parameters:
              TerraformFolder: $(TerraformFolder)

  - stage: DeployDevelopment
    dependsOn: [ Build ]
    condition: and(succeeded(), eq(variables['ShouldDeploy'],'true'))
    displayName: 'Development'
    jobs:
      - template: jobs-core-deployment.yaml
        parameters:
          subscription: 's198d.azdo-deployment'
          environmentPrefix: 's198d01'
          environment: 'development'
          cipEnvironment: 'Dev'

  - stage: DeployAutomatedTest
    dependsOn: [ Build ]
    condition: and(succeeded(), eq(variables['ShouldDeploy'],'true'))
    displayName: 'Automated test'
    jobs:
      - template: jobs-core-deployment.yaml
        parameters:
          subscription: 's198d.azdo-deployment'
          environmentPrefix: 's198d02'
          environment: 'automated-test'
          cipEnvironment: 'Dev'

  - stage: DeployTest
    dependsOn: [ Build, DeployAutomatedTest ]
    condition: and(succeeded(), eq(variables['ShouldDeploy'],'true'))
    displayName: 'Test'
    jobs:
      - template: jobs-core-deployment.yaml
        parameters:
          subscription: 's198t.azdo-deployment'
          environmentPrefix: 's198t01'
          environment: 'test'
          cipEnvironment: 'Test'