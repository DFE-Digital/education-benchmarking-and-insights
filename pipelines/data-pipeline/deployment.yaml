parameters:
  subscription: ''
  sourceServicePrincipal: ''
  sourceSubscription: ''
  environmentPrefix: ''
  environment: ''
  cipEnvironment: ''
  buildNumber: ''
  workspaceDir: '$(Pipeline.Workspace)'
  importImage: true
  sourceEnvironmentPrefix: ''
  dependsOn: []

jobs:

  - deployment: DataPipelinePushImage
    displayName: 'Data Pipeline : Import Image'
    dependsOn: ${{ parameters.dependsOn }}
    condition: ${{ parameters.importImage }}
    pool:
      vmImage: ubuntu-latest
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureCLI@2
              displayName: Get source subscription ID
              inputs:
                azureSubscription: ${{ parameters.sourceServicePrincipal }}
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  PWD=$(az acr credential show -n ${{ parameters.sourceEnvironmentPrefix }}acr --query 'passwords[0].value')
                  echo "##vso[task.setvariable variable=pwd]${PWD}"

            - task: AzureCLI@2
              displayName: 'Import image from ${{ parameters.sourceEnvironmentPrefix }}acr.azurecr.io/fbit-data-pipeline:${{ parameters.buildNumber }}'
              inputs:
                azureSubscription: ${{ parameters.subscription }}
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                    az acr import --name ${{ parameters.environmentPrefix }}acr --source ${{ parameters.sourceEnvironmentPrefix }}acr.azurecr.io/fbit-data-pipeline:${{ parameters.buildNumber }} --image fbit-data-pipeline:${{ parameters.buildNumber }} --username ${{ parameters.sourceEnvironmentPrefix }}acr --password $(pwd)

  - deployment: DataPipelineProvision
    displayName: 'Data Pipeline : Provision'
    dependsOn: [DataPipelinePushImage]
    pool:
      vmImage: ubuntu-latest
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: none

            - download: current

            - template: ..\common\run-terraform.yaml
              parameters:
                subscription: ${{ parameters.subscription }}
                environmentPrefix: ${{ parameters.environmentPrefix }}
                environment: ${{ parameters.environment }}
                cipEnvironment: ${{ parameters.cipEnvironment }}
                module: 'data-pipeline'
                imageName: 'fbit-data-pipeline:${{ parameters.buildNumber }}'


  