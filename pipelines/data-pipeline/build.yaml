pool:
  vmImage: 'ubuntu-latest'

trigger:
  batch: true
  branches:
    include:
      - main
      - tech-debt/new-pipelines
  paths:
    include:
      - data-pipeline

pr:
  paths:
    include:
      - data-pipeline

variables:
  Version.Revision: $[counter(variables['Build.SourceBranchName'], 0)]
  Version.BuildNumber: 0.0.$(Version.Revision)
  Version.BuildVersion: $(Version.BuildNumber)
  TerraformFolder: 'data-pipeline/terraform'
  TerraformDirectory: '$(System.DefaultWorkingDirectory)/$(TerraformFolder)'
  ShouldDeploy: $[and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest'))]

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: SetBuildNumber
        displayName: 'Set build number'
        steps:
          - checkout: none

          - bash: |
              echo "##vso[task.setvariable variable=Version.BuildNumber]$(Version.BuildNumber)-prerelease"
              echo "##vso[task.setvariable variable=Version.BuildVersion]$(Version.BuildNumber)"
              echo "##vso[build.updatebuildnumber]$(Version.BuildNumber)-prerelease"
            condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest'))
            displayName: 'Set pre-release build number'

      - job: FmtValidateTf
        displayName: "Lint and validate terraform"
        steps:
          - template: ..\common\fmt-validate-terraform.yaml
            parameters:
              TerraformDirectory: $(TerraformDirectory)

      - job: RunCheckOv
        displayName: "Static analysis terraform"
        steps:
          - template: ..\common\scan-terraform.yaml
            parameters:
              TerraformDirectory: $(TerraformDirectory)

      - job: ZipStaticArtifacts
        displayName: 'Zip static artifacts'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        steps:
          - template: ..\common\publish-terraform-artifacts.yaml
            parameters:
              TerraformFolder: $(TerraformFolder)
              Module: 'data-pipeline'

      - job: RunTests
        displayName: 'Run unit tests'
        
        steps:
          - template: steps\run-unit-tests.yaml    
