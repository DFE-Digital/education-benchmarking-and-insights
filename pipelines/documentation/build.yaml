pool:
  vmImage: 'ubuntu-latest'

trigger:
  batch: true
  branches:
    include:
      - main
      - feature/improve-doc-pdf-outputs
  paths:
    include:
      - documentation
      - pipelines/documentation

pr:
  paths:
    include:
      - documentation

variables:
  - template: ..\common\vars.yaml
  - name: WorkingDir
    value: 'documentation'
  - name: FullWorkingDir
    value: '$(System.DefaultWorkingDirectory)/$(WorkingDir)'
  - name: DataDir
    value: '$(FullWorkingDir)/tools'
  - group: 'sharepoint'

parameters:
  - name: core
    type: object
    default:
      - architecture
      - developers
      - feature
      - quality-assurance
      - prototype
      - operational
      - data
  - name: guides
    type: object
    default:
      - cfr-file-generation
      - monthly-reporting

stages:
  - stage: Validate
    displayName: 'Validate'
    jobs:
      - job: BranchValidate
        displayName: "Validate branch name"
        steps:
          - checkout: none
          - template: ..\common\validate-branch.yaml
            parameters:
              branchName: $(SourceBranch)

      - job: SetBuildNumber
        displayName: 'Set build number'
        steps:
          - checkout: none
          - bash: |
              echo "##vso[task.setvariable variable=Version.BuildNumber]$(Version.BuildNumber)"
              echo "##vso[task.setvariable variable=Version.BuildVersion]$(Version.BuildNumber)"
              echo "##vso[build.updatebuildnumber]$(Version.BuildNumber)"
              echo "##vso[build.addbuildtag]$(Version.BuildNumber)"
            displayName: 'Set release build number'
            condition: and(succeeded(), eq(variables['ShouldDeploy'],'true'))

          - bash: |
              if [[ "$(Build.Reason)" == "PullRequest" ]]; then
                echo "##vso[build.addbuildtag]PR$(System.PullRequest.PullRequestId)"
              fi
              echo "##vso[build.addbuildtag]Documentation"
            displayName: 'Set build tags'

      - job: MarkdownLint
        displayName: 'Markdown lint'
        steps:
          - template: ..\common\markdown-lint.yaml
            parameters:
              DocumentsDirectory: '$(System.DefaultWorkingDirectory)/documentation'

  - stage: GenerateDocumentation
    dependsOn: [ Validate ]
    displayName: 'Generate'
    condition: and(succeeded(), eq(variables['ShouldDeploy'],'true'))
    jobs:
      - job: BuildDocumentation
        displayName: 'Build and publish documentation'
        steps:
          - bash: sudo apt-get update
            displayName: 'Update the package list'

          - bash: sudo apt-get install -y pandoc pandoc-crossref texlive-latex-extra
            displayName: 'Install pandoc & latex'

          - bash: sudo apt-get install texlive-fonts-recommended texlive-fonts-extra
            displayName: 'Install tex fonts'

          - task: Npm@1
            displayName: 'Install mermaid cli'
            inputs:
              command: 'custom'
              customCommand: 'install -g @mermaid-js/mermaid-cli'

          - ${{ each folder in parameters.core }}:
            - template: generate-docs.yaml
              parameters:
                folder: ${{ folder }}
                filename: ${{ folder }}

          - ${{ each folder in parameters.guides }}:
            - template: generate-docs.yaml
              parameters:
                folder: 'guides/${{ folder }}'
                filename: 'guide-${{ folder }}'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish artifacts'
            inputs:
              targetPath: '$(WorkingDir)/pub'
              artifact: 'docs'
              publishLocation: 'pipeline'
              
      - job: SharePointPublish
        displayName: 'Publish artifacts to SharePoint'
        dependsOn: [ BuildDocumentation ]
        steps:
          - checkout: self

          - template: ..\common\publish-sharepoint-artifacts.yaml
            parameters:
              ArtifactName: 'docs'
              ArtifactPattern: '**/*.pdf'
              TargetPath: 'FBIT support\Documentation'
              SiteUrl: $(SharePoint_SiteUrl)
              ClientId: $(SharePoint_ClientId)
              ClientSecret: $(SharePoint_ClientSecret)
