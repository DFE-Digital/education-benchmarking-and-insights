parameters:
  subscription: ''
  environmentPrefix: ''
  environment: ''
  cipEnvironment: ''
  workspaceDir: '$(Pipeline.Workspace)'
  dependsOn: []

jobs:
  - deployment: WebProvision
    displayName: 'Web : Provision'
    dependsOn: ${{ parameters.dependsOn }}
    pool:
      vmImage: ubuntu-latest
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: none

            - download: current

            - template: ..\common\run-terraform.yaml
              parameters:
                subscription: ${{ parameters.subscription }}
                environmentPrefix: ${{ parameters.environmentPrefix }}
                environment: ${{ parameters.environment }}
                cipEnvironment: ${{ parameters.cipEnvironment }}
                module: 'web'

  - deployment: WebDeployment
    displayName: 'Web : Deployment'
    dependsOn: [ WebProvision ]
    pool:
      vmImage: ubuntu-latest
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: none

            - download: current

            - task: AzureRmWebAppDeployment@4
              displayName: 'Deploy website'
              inputs:
                azureSubscription: ${{ parameters.subscription }}
                WebAppName: '${{ parameters.environmentPrefix }}-education-benchmarking'
                deployToSlotOrASE: true
                ResourceGroupName: '${{ parameters.environmentPrefix }}-ebis-web'
                packageForLinux: '${{ parameters.workspaceDir }}/web/Web.App.zip'
                enableCustomDeployment: true
                DeploymentType: 'zipDeploy'

  - deployment: ReleaseAnnotation
    displayName: 'Web : Release Annotation'
    dependsOn: [ WebDeployment ]
    pool:
      vmImage: ubuntu-latest
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: AzureCLI@2
              displayName: 'Add release annotation to Application Insights'
              continueOnError: true
              inputs:
                azureSubscription: ${{ parameters.subscription }}
                scriptType: pscore
                scriptLocation: scriptPath
                scriptPath: "$(Agent.BuildDirectory)/s/pipelines/common/scripts/CreateReleaseAnnotation.ps1"
                arguments: '
                  -appInsightsResourceName ${{ parameters.environmentPrefix }}-ebis-ai `
                  -releaseName "$(Build.Repository.Name) - $(Build.BuildNumber)" `
                  -releaseProperties @{
                  "BuildNumber"="$(Build.BuildNumber)";
                  "BuildRepositoryName"="$(Build.Repository.Name)";
                  "BuildRepositoryProvider"="$(Build.Repository.Provider)";
                  "ReleaseDefinitionName"="$(Build.DefinitionName)";
                  "ReleaseDescription"="Triggered by $(Build.DefinitionName) $(Build.BuildNumber)";
                  "SourceBranch"="$(Build.SourceBranch)" }'