pool:
  vmImage: 'ubuntu-latest'

trigger: none

pr: none

parameters:
  - name: coreVersion
    displayName: 'Input core infrastructure version'
    type: string
  - name: platformVersion
    displayName: 'Input platform version'
    type: string
  - name: webVersion
    displayName: 'Input web version'
    type: string
  - name: pipelineVersion
    displayName: 'Input data pipeline version'
    type: string
  - name: preProdEnv
    displayName: 'Select pre-production environment'
    type: string
    default: s198p02
    values:
      - s198p02

variables:
  ShouldDeployProd: $[eq('${{ parameters.preProdEnv }}', 's198p02')]
  IsPipelineVersionSet: $[ne('${{ parameters.pipelineVersion }}', 'latest')]

stages:
  - stage: Artifacts
    displayName: 'Gather artifacts'
    jobs:
      - job: CoreDownloadPublish
        displayName: 'Core : Download artifacts and republish'
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            name: DownloadArtifact
            inputs:
              buildType: 'specific'
              project: 's198-DfE-Benchmarking-service'
              definition: 2862
              buildVersionToDownload: 'latestFromBranch'
              branchName: 'refs/heads/main'
              allowFailedBuilds: false
              allowPartiallySucceededBuilds: false
              targetPath: $(workspaceDir)
              tags: ${{ parameters.coreVersion }}

          - bash: echo "##vso[build.addbuildtag]Core - ${{ parameters.coreVersion }}"
            displayName: 'Set tag'

          - publish: $(workspaceDir)/core-terraform
            artifact: core-terraform

          - publish: $(workspaceDir)/core-db
            artifact: core-db

      - job: PipelineDownloadPublish
        displayName: 'Data pipeline : Download artifacts and republish'
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            name: DownloadArtifact
            inputs:
              buildType: 'specific'
              project: 's198-DfE-Benchmarking-service'
              definition: 2879
              buildVersionToDownload: 'latestFromBranch'
              branchName: 'refs/heads/main'
              allowFailedBuilds: false
              allowPartiallySucceededBuilds: false
              targetPath: $(workspaceDir)
              tags: ${{ parameters.pipelineVersion }}

          - bash: echo "##vso[build.addbuildtag]Data pipeline - ${{ parameters.pipelineVersion }}"
            displayName: 'Set tag'

          - publish: $(workspaceDir)/data-pipeline-terraform
            artifact: data-pipeline-terraform

  #      - job: PlatformDownloadPublish
  #        displayName: 'Platform : Download artifacts and republish'
  #        steps:
  #          - checkout: none
  #          - task: DownloadPipelineArtifact@2
  #            name: DownloadArtifact
  #            inputs:
  #              buildType: 'specific'
  #              project: 's198-DfE-Benchmarking-service'
  #              definition: 2865
  #              buildVersionToDownload: 'latestFromBranch'
  #              branchName: 'refs/heads/main'
  #              allowFailedBuilds: false
  #              allowPartiallySucceededBuilds: false
  #              targetPath: $(workspaceDir)
  #              tags: ${{ parameters.platformVersion }}
  #
  #          - bash: echo "##vso[build.addbuildtag]Platform build id - $(DownloadArtifact.BuildNumber)"
  #            displayName: 'Set build tag'
  #
  #          - publish: $(workspaceDir)/platform-terraform
  #            artifact: platform-terraform
  #
  #          - publish: $(workspaceDir)/api-tests
  #            artifact: api-tests
  #
  #          - publish: $(workspaceDir)/platform-apis
  #            artifact: platform-apis
  #
  #          - publish: $(workspaceDir)/platform-db
  #            artifact: platform-db
  #
  #          - publish: $(workspaceDir)/platform-search
  #            artifact: platform-search
  #
  #      - job: WebDownloadPublish
  #        displayName: 'Web : Download artifacts and republish'
  #        steps:
  #          - checkout: none
  #          - task: DownloadPipelineArtifact@2
  #            name: DownloadArtifact
  #            inputs:
  #              buildType: 'specific'
  #              project: 's198-DfE-Benchmarking-service'
  #              definition: 2866
  #              buildVersionToDownload: 'latestFromBranch'
  #              branchName: 'refs/heads/main'
  #              allowFailedBuilds: false
  #              allowPartiallySucceededBuilds: false
  #              targetPath: $(workspaceDir)
  #              tags: ${{ parameters.webVersion }}
  #
  #          - bash: echo "##vso[build.addbuildtag]Web build id - $(DownloadArtifact.BuildNumber)"
  #            displayName: 'Set build tag'
  #
  #          - publish: $(workspaceDir)/web-terraform
  #            artifact: web-terraform
  #
  #          - publish: $(workspaceDir)/web
  #            artifact: web
  #
  #          - publish: $(workspaceDir)/e2e-tests
  #            artifact: e2e-tests

  - stage: DeployPreProd
    dependsOn: [ Artifacts ]
    displayName: 'Pre-production'
    variables:
      - group: 'dsi pre-prod'
    jobs:
      - template: deployment.yaml
        parameters:
          subscription: 's198p.azdo.deployment'
          environmentPrefix: ${{ parameters.preProdEnv }}
          environment: 'pre-production'
          cipEnvironment: 'Prod'
          pipelineBuildNumber: ${{ parameters.pipelineVersion }}

#  - stage: DeployProd
#    dependsOn: [ DeployPreProd ]
#    condition: and(succeeded(), eq(variables['ShouldDeployProd'],'true'))
#    displayName: 'Production'
#    variables:
#      - group: 'dsi prod'
#    jobs:
#      - template: deployment.yaml
#        parameters:
#          subscription: 's198p.azdo.deployment'
#          environmentPrefix: 's198p01'
#          environment: 'production'
#          cipEnvironment: 'Prod'
#          pipelineBuildNumber: ${{ parameters.pipelineVersion }}